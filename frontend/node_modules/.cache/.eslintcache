[{"/Users/zane/Desktop/GitHub/FSP/frontend/src/index.js":"1","/Users/zane/Desktop/GitHub/FSP/frontend/src/App.js":"2","/Users/zane/Desktop/GitHub/FSP/frontend/src/store/index.js":"3","/Users/zane/Desktop/GitHub/FSP/frontend/src/store/csrf.js":"4","/Users/zane/Desktop/GitHub/FSP/frontend/src/store/session.js":"5","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/LoginFormPage/LoginForm.js":"6","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/SignupFormPage/SignupForm.js":"7","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/Navigation/NavBar.js":"8","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/Footer/Footer.js":"9","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/Splash/Splash.js":"10","/Users/zane/Desktop/GitHub/FSP/frontend/src/store/questions.js":"11","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/QuestionsIndex/QuestionsIndex.js":"12","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/QuestionsShow/QuestionsShow.js":"13","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/QuestionsCreate/QuestionsCreate.js":"14","/Users/zane/Desktop/GitHub/FSP/frontend/src/store/users.js":"15"},{"size":1202,"mtime":1676577794585,"results":"16","hashOfConfig":"17"},{"size":1157,"mtime":1676600598681,"results":"18","hashOfConfig":"17"},{"size":846,"mtime":1680295202294,"results":"19","hashOfConfig":"17"},{"size":1468,"mtime":1680536848572,"results":"20","hashOfConfig":"17"},{"size":2816,"mtime":1676579249783,"results":"21","hashOfConfig":"17"},{"size":6178,"mtime":1676580314665,"results":"22","hashOfConfig":"17"},{"size":7191,"mtime":1676693911969,"results":"23","hashOfConfig":"17"},{"size":2920,"mtime":1676693911965,"results":"24","hashOfConfig":"17"},{"size":1382,"mtime":1676693911961,"results":"25","hashOfConfig":"17"},{"size":2642,"mtime":1676582185232,"results":"26","hashOfConfig":"17"},{"size":2406,"mtime":1680536913031,"results":"27","hashOfConfig":"17"},{"size":1326,"mtime":1680527190165,"results":"28","hashOfConfig":"17"},{"size":1171,"mtime":1680527179634,"results":"29","hashOfConfig":"17"},{"size":2741,"mtime":1680536982534,"results":"30","hashOfConfig":"17"},{"size":1513,"mtime":1680294213231,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},"1x81nui",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"36"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/zane/Desktop/GitHub/FSP/frontend/src/index.js",["86","87"],[],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport configureStore from './store';\nimport csrfFetch, { restoreCSRF } from './store/csrf';\nimport sessionReducer from './store/session.js'\nimport * as sessionActions from './store/session'\nimport * as questionActions from './store/questions'\nconst store = configureStore();\n\nif (process.env.NODE_ENV !== 'production') {\n  window.store = store;\n  window.csrfFetch = csrfFetch;\n  window.sessionActions = sessionActions;\n  window.questionActions = questionActions;\n  // debugger\n}\n\nfunction Root() {\n\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nconst renderApplication = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Root />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );  \n}\n\nif (\n  sessionStorage.getItem(\"currentUser\") === null ||\n  sessionStorage.getItem(\"X-CSRF-Token\") === null \n) {\n  store.dispatch(sessionActions.restoreSession()).then(renderApplication);\n} else {\n  renderApplication();\n}",[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/App.js",["88"],[],"import LoginFormPage from \"./components/LoginFormPage/LoginForm\";\nimport { Route, Switch } from 'react-router-dom' \nimport React from 'react'\nimport NavBar from './components/Navigation/NavBar.js'\nimport SignupFormPage from './components/SignupFormPage/SignupForm'\nimport Footer from './components/Footer/Footer.js'\nimport Splash from './components/Splash/Splash.js'\nimport QuestionsIndex from './components/QuestionsIndex/QuestionsIndex.js'\nimport QuestionsShow from './components/QuestionsShow/QuestionsShow'\nimport QuestionsCreate from \"./components/QuestionsCreate/QuestionsCreate\";\n\nfunction App() {\n  return (\n    <>\n    <NavBar />\n    <Switch>\n      <Route path='/login'>\n        <LoginFormPage />\n      </Route>\n      <Route exact path='/'>\n        <Splash />\n      </Route>\n      <Route exact path='/questions'>\n        <QuestionsIndex />\n      </Route>\n      <Route path='/questions/new'>\n        <QuestionsCreate />\n      </Route>\n      <Route exact path = '/questions/:questionId'>\n        <QuestionsShow />\n      </Route>\n      <Route path='/signup' >\n        <SignupFormPage />\n      </Route>\n    </Switch>\n    </>\n  );\n}\n\nexport default App;\n","/Users/zane/Desktop/GitHub/FSP/frontend/src/store/index.js",[],[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/store/csrf.js",[],[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/store/session.js",["89"],[],"import csrfFetch from \"./csrf\"\n\nconst SET_CURRENT_USER = 'session/setCurrentUser'\nconst REMOVE_CURRENT_USER = 'session/removeCurrentUser'\nconst RECEIVE_USER = 'users/RECEIVE_USER'\nconst REMOVE_USER = 'users/REMOVE_USER'\n\n// Action Creators\nexport const receiveUser = (user) => {\n    // debugger\n    return {\n        type: RECEIVE_USER,\n        user: user\n    }\n}\n\nexport const removeUser = (userId) => {\n    return {\n        type: REMOVE_USER,\n        userId: userId\n    }\n}\n\nconst setCurrentUser = (user) => {\n  // debugger\n    return {\n      type: SET_CURRENT_USER,\n      payload: user\n    };\n  };\n  \n  const removeCurrentUser = () => {\n    return {\n      type: REMOVE_CURRENT_USER\n    };\n  };\n\n// Thunk Action\nexport const loginUser = (user) => async (dispatch) => {\n    // debugger\n    const { email, password } = user;\n    const response = await csrfFetch('/api/session', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    storeCurrentUser(data.user);\n    dispatch(setCurrentUser(data.user));\n    return response;\n};\n\nconst initialState = { user: JSON.parse(sessionStorage.getItem('currentUser')) }\n\nconst storeCSRFToken = (response) => {\n    const csrfToken = response.headers.get(\"X-CSRF-Token\")\n    if (csrfToken) sessionStorage.setItem(\"X-CSRF-Token\", csrfToken)\n}\n\nconst storeCurrentUser = (user) => {\n  // debugger\n    if (user) sessionStorage.setItem(\"currentUser\", JSON.stringify(user))\n    else sessionStorage.removeItem(\"currentUser\")\n}\n\nexport const restoreSession = () => async (dispatch) => {\n    const response = await csrfFetch(\"/api/session\")\n    storeCSRFToken(response)\n    const data = await response.json()\n    storeCurrentUser(data.user)\n    dispatch(setCurrentUser(data.user))\n    return response\n}\n\nexport const logoutUser = (userId) => async (dispatch) => {\n    const response = await csrfFetch('/api/session', {\n        method: 'DELETE'\n    })\n\n    // sessionStorage.setItem('currentUser', null)\n    storeCurrentUser(null)\n    dispatch(removeCurrentUser(userId))\n}\n\nexport const signup = (user) => async (dispatch) => {\n  const { displayName, email, password } = user;\n  const response = await csrfFetch(\"api/users\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      displayName,\n      email,\n      password\n    })\n  });\n  const data = await response.json();\n  storeCurrentUser(data.user);\n  dispatch(setCurrentUser(data.user));\n  return response;\n};\n\n// Reducer\nconst sessionReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case SET_CURRENT_USER:\n        return { ...state, user: action.payload };\n      case REMOVE_CURRENT_USER:\n        return { ...state, user: null };\n      default:\n        return state;\n    }\n  };\n  \n  \nexport default sessionReducer\n","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/LoginFormPage/LoginForm.js",["90","91","92","93","94","95"],[],"import { useDispatch, useSelector } from \"react-redux\"\nimport { useState } from 'react'\nimport * as sessionActions from '../../store/session'\nimport { Redirect } from 'react-router-dom'\nimport './LoginForm.css'\nimport { Link } from 'react-router-dom'\nimport ErrorLogo from \"../../assets/Exclam.png\"\nimport WellfoundLogo from \"../../assets/Wellfound.png\"\nimport LinkedInLogo from \"../../assets/LinkedInLogo.png\"\nimport GitHubLogo from \"../../assets/GitHubLogo.png\"\nimport NavBar from \"../Navigation/NavBar\"\n\nconst LoginFormPage = (props) => {\n    // const mustBeLoggedIn = props.location.mustBeLoggedIn\n    // const loggedInError = () => {\n    //     // debugger\n    //     if (mustBeLoggedIn) {\n    //         // debugger\n    //         return <div><h1>Must Be Logged In</h1></div>\n    //     } else {\n    //         return null\n    //     }\n    // }\n\n    const dispatch = useDispatch()\n    const sessionUser = useSelector((state) => state.session.user)\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [errors, setErrors] = useState([])\n\n    if (sessionUser) return <Redirect to='/' />\n\n    const handleEmail = (e) => {\n        e.preventDefault()\n        setEmail(e.currentTarget.value)\n    }\n\n    const handlePassword = (e) => {\n        e.preventDefault()\n        setPassword(e.currentTarget.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        setErrors([])\n        return dispatch(sessionActions.loginUser({ email, password }))\n            .catch(async (res) => {\n                let data;\n                try {\n                    // clone lets you read response body twice\n                    data = await res.clone().json();\n                } catch {\n                    data = await res.text() // hits if server is down\n                }\n                if (data?.errors) setErrors(data.errors);\n                else if (data) setErrors([data]);\n                else setErrors([res.statusText]);\n            });\n    }\n\n    const LoginInput = () => {\n        return (\n            <input className=\"LoginInput\" id=\"EmailInput\"\n            type=\"text\" value={email} onChange={handleEmail}\n            ></input>\n        )\n    }\n\n    const ErrorsLoginInput = () => {\n        return (\n            <div id='ErrorsPasswordContainer'>\n            <input name='password' id='ErrorsEmailInput' className='ErrorsLoginInput'\n            type=\"email\" value={email} onChange={handleEmail}\n            ></input>\n            <img className='ErrorImg' src={ErrorLogo}></img>\n            </div>\n        )\n    }\n\n    const PasswordInput = () => {\n        return (\n            <input name='password' id='PasswordInput' className='LoginInput'\n            type=\"password\" value={password} onChange={handlePassword}\n            ></input>\n        )\n    }\n\n    const ErrorsPasswordInput = () => {\n        return (\n            <div id='ErrorsPasswordContainer'>\n            <input name='password' id='ErrorsPasswordInput' className='ErrorsLoginInput'\n            type=\"password\" value={password} onChange={handlePassword}\n            ></input>\n            <img className='ErrorImg' src={ErrorLogo}></img>\n            </div>\n        )\n    }\n\n    return (\n        <>\n        <div id='LoginWindow'>\n        <div className='ColumnContainer'>\n            {/* {loggedInError()} */}\n            <h1 id=\"Container200\">\n                <Link to='/' id='Logo200'>200 OK</Link>\n            </h1>\n            <div id='ButtonsContainer'>\n                <a href='https://www.linkedin.com/in/zane-eisen-121856bb/' className=\"Buttons\" id ='LinkedIn'>\n                    <img src={LinkedInLogo} className='logos'></img>\n                    My LinkedIn\n                </a>\n                <a href='https://github.com/zeisen33' className=\"Buttons\" id='GitHub'>\n                    <img src={GitHubLogo} className='logos'></img>\n                    My GitHub\n                </a>\n                <a href='https://angel.co/' className=\"Buttons\" id='Wellfound'>\n                    <img src={WellfoundLogo} className='logos'></img>\n                    My Wellfound\n                </a>\n            </div>\n            <div id='FormContainer' >\n                <form onSubmit={handleSubmit} className='LoginForm'>\n                    <div id='EmailContainer'>\n                    <label htmlFor='EmailInput' id='EmailLabel'>Email\n                    </label>\n                    \n                        {errors.length > 0 ? ErrorsLoginInput() : LoginInput()}\n                    \n                    </div>\n                    <ul className='Error'>\n                        {errors.length > 0 ? 'Invalid Credentials.' : null}\n                    </ul>\n                  \n                    <div id='Password Container'>\n                        <div id='PasswordForgotPassword'>\n                        <label id='LoginPasswordLabel' htmlFor='password'>Password\n                        </label>\n                        <Link to='/' id='ForgotPassword'>Forgot Password?</Link>\n                        </div>\n                    \n                            {errors.length > 0 ? ErrorsPasswordInput(): PasswordInput()}\n                        \n                    <ul className='Error' id='Error2'>\n                        {errors.length > 0 ? 'Invalid Credentials.' : null}\n                    </ul>\n                    </div>\n                    <br/>\n                    <button className='Buttons' type=\"submit\" id='LogInButton'>Log in</button>\n                </form>\n            </div>\n            <div id='TextContainer'>\n            <span id='NoAccount' >Don't have an account? <a href='/signup' id='NewUser'>Sign up</a></span>\n            {/* <br/> */}\n            <p id=\"TextParagraph\">Are you a recruiter? Check out my links!\n                <a className='parLinks' href='https://www.linkedin.com/in/zane-eisen-121856bb/'>My LinkedIn</a>\n                <a className='parLinks' href='https://github.com/zeisen33'>My GitHub</a>\n                <a className='parLinks' href='https://angel.co/'>My Wellfound</a>\n            </p>\n            </div>\n        </div>\n        </div>\n        </>\n    )\n}\n\nexport default LoginFormPage\n","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/SignupFormPage/SignupForm.js",["96","97","98","99","100","101","102","103","104","105","106"],[],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as sessionActions from \"../../store/session\";\nimport './SignupForm.css'\nimport ErrorLogo from \"../../assets/Exclam.png\"\nimport WellfoundLogo from \"../../assets/Wellfound.png\"\nimport LinkedInLogo from \"../../assets/LinkedInLogo.png\"\nimport GitHubLogo from \"../../assets/GitHubLogo.png\"\nimport { loginUser } from \"../../store/session\";\n\n\n\nfunction SignupFormPage() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [email, setEmail] = useState(\"\");\n  const [displayName, setDisplayName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  // const [displayErrors, setDisplayErrors] = useState([])\n  const [emailErrors, setEmailErrors] = useState([])\n  const [passwordErrors, setPasswordErrors] = useState([])\n  const [robot, setRobot] = useState()\n\n  if (sessionUser) return <Redirect to=\"/\" />;\n\n  const handleSubmit = async (e) => {\n      e.preventDefault();\n      await setErrors([]);\n      await dispatch(sessionActions.signup({ email, displayName, password }))\n        .catch(async (res) => {\n          // debugger\n        let data;\n        try {\n          // .clone() essentially allows you to read the response body twice\n          data = await res.clone().json();\n        } catch {\n          data = await res.text(); // Will hit this case if the server is down\n          // debugger\n        }\n        // debugger\n        if (data?.errors) {\n          // debugger\n          setErrors(data.errors);\n        } else if (data) {\n          // debugger\n          setErrors([data]);\n        } else {\n          // debugger\n          setErrors([res.statusText]);\n        }\n      });\n    }\n\n    const showErrors = (inputType) => {\n      // debugger\n      let errorEl;\n     \n      errors.forEach((error) => {\n        if (error.includes(inputType)) {\n          // debugger\n          errorEl = <ul className='Error'>{error}</ul>\n\n        }\n      })\n      // debugger\n      return errorEl;\n    }\n  \n  const handleDemo = async (e) => {\n    e.preventDefault()\n    // debugger\n    await dispatch(sessionActions.loginUser({email: 'demo@user.io', password: 'password'}));\n    // window.location.replace(\"/\");\n  }\n\n\n  return (\n    <div id='SignupWindow'>\n      <div id='ContentContainer'>\n        <div id='LeftColumnContainer' >\n          <h1 id='JoinTitle'>Join the 200 OK community</h1>\n          <h2 className='Features'>Get unstuck – ask a question</h2>\n          <h2 className='Features'>Answer questions</h2>\n          <h2 className='Features'>Vote and comment on questions</h2>\n          <h2 className='Features'>Search for questions</h2>\n          <span id='SubText'>Collaborate and share knowledge with users for FREE. <br /><a id='linkA' className='Link' href='/'>Go to 200 OK homepage</a></span>\n        </div>\n        <div id='RightColumnContainer' >\n          <div id='ButtonsContainer'>\n            <a href='https://www.linkedin.com/in/zane-eisen-121856bb/' className=\"Buttons\" id ='LinkedIn'>\n                <img src={LinkedInLogo} className='logos'></img>\n                My LinkedIn\n            </a>\n            <a href='https://github.com/zeisen33' className=\"Buttons\" id='GitHub'>\n                <img src={GitHubLogo} className='logos'></img>\n                My GitHub\n            </a>\n            <a href='https://angel.co/' className=\"Buttons\" id='Wellfound'>\n                <img src={WellfoundLogo} className='logos'></img>\n                My Wellfound\n            </a>\n          </div>\n\n          {/* <h1 id='Title'>Create your 200 OK account. It's free and only takes a minute.</h1> */}\n          <div className='SignupFormContainer'>\n            <form onSubmit={handleSubmit} className='SignupForm'>\n              <div className='InputContainer' id='DisplayNameContainer'>\n                <label id='displaylabel' htmlFor='displayinput'>\n                  Display Name\n                  </label >\n                  <input className='input' id='displayinput'\n                    type=\"text\"\n                    value={displayName}\n                    onChange={(e) => setDisplayName(e.target.value)}\n                  />\n                  <br/>\n                  {showErrors('Display')}\n              </div>\n              <div className='InputContainer' id='ContainerEmail'>\n              <label id='label' htmlFor='emailinput'>\n                Email</label>\n                <input className='input' id='emailinput'\n                  type=\"text\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n                <br/>\n              {showErrors('Email')}\n              </div>\n              <div className='InputContainer' id='ContainerPassword'>\n              <label id='label' htmlFor='passwordinput'>\n                Password</label>\n                <input className='input' id='passwordinput'\n                  type=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              {showErrors('Password')}\n              </div>\n              <span id='SubText'>\n              Passwords must contain at least six characters. At least 1 letter and 1 number are recommended.\n              </span>\n              <div id=\"CaptchaOuter\">\n                <div id=\"CaptchaInner\">\n                  <div id='captchaline'>\n                  <input type='checkbox' id='imnotarobot' />\n                  <label htmlFor='imnotarobot' id='robotLabel'>I'm not a robot</label>\n                  </div>\n                </div>\n              </div>\n              <div id=\"optin\">\n                <input type='checkbox' id='optinbox'/>\n                <label htmlFor='optinbox' id='optinlabel'>Opt-in to receive occasional product updates, user research invitations, announcements, and disgests.</label>\n              </div>\n              <button id='signupButton' type=\"submit\">Sign Up</button>\n              <button id='signupButton' type='submit' onClick={handleDemo}>Sign in as Demo User</button>\n              <div id='spancontainer'>\n              <span id='byclicking'>By clicking “Sign up”, you agree to our </span><span className='blue'>terms of service, privacy policy</span> and <span className='blue'>cookie policy.</span>             \n              </div>\n            </form>\n            \n            </div>\n            <div id='TextContainerSignup'>\n            <span id='NoAccountSignup' >Already have an account? <a href='/login' className=\"blue\" id='loginlink'>Log in</a></span>\n            <br/>\n            <p id=\"TextParagraph\">Are you a recruiter? Check out my links!\n                <a className='parLinks' href='https://www.linkedin.com/in/zane-eisen-121856bb/'>My LinkedIn</a>\n                <a className='parLinks' href='https://github.com/zeisen33'>My GitHub</a>\n                <a className='parLinks' href='https://angel.co/'>My Wellfound</a>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>  \n  );\n}\n\nexport default SignupFormPage;","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/Navigation/NavBar.js",["107","108","109","110","111","112","113","114"],[],"import { useDispatch, useSelector } from \"react-redux\"\nimport { useState } from 'react'\nimport * as sessionActions from '../../store/session'\nimport { Redirect } from 'react-router-dom'\nimport './NavBar.css'\nimport { Link } from 'react-router-dom'\nimport ErrorLogo from \"../../assets/Exclam.png\"\nimport WellfoundLogo from \"../../assets/Wellfound.png\"\nimport LinkedInLogo from \"../../assets/LinkedInLogo.png\"\nimport GitHubLogo from \"../../assets/GitHubLogo.png\"\nimport { BrowserRouter, Route } from \"react-router-dom\" \nimport { NavLink } from 'react-router-dom'\n\n\nconst NavBar = () => {\n    const sessionUser = useSelector((state) => state.session.user);\n    const [searchStr, setSearchstr] = useState()\n    const dispatch = useDispatch()\n\n    const handleSearchChange = (e) => {\n        e.preventDefault()\n        setSearchstr(e.target.value)\n    }\n\n    const handleLogout = async () => {\n        await dispatch(sessionActions.logoutUser(sessionUser.id))\n        window.location.reload()\n    }\n\n    const handleLogin = () => {\n        window.location.href='/login'\n    }\n\n    const handleSignUp = () => {\n        window.location.href='/signup'\n    }\n\n    const loginout = () => {\n        if (sessionUser) {\n            return (\n                <> \n                <div id='RightButtonsContainerLoggedIn'>\n                    <div id='RightButtonLinkedInContainer'>\n                        <a href='https://www.linkedin.com/in/zane-eisen-121856bb/' className=\"RightButton\" id ='LinkedInRight'>\n                            <img src={LinkedInLogo} className='logos'></img>\n                        My LinkedIn\n                        </a>\n                    </div>\n                    <button className='RightButton' id='NavLogoutButton' onClick={handleLogout}>Log out</button>\n                </div> \n                </>\n            )\n        } else {\n            return (\n                <>\n                    <div id='RightButtonsContainer'>\n                    <div><button onClick={handleLogin} className='RightButton' id='NavLoginButton'>Log in</button></div>\n                    <div><button onClick={handleSignUp} className='RightButton' id='NavSignUpButton'>Sign up</button></div>\n                    </div>\n                </>\n            )\n        }\n    }\n\n\nreturn (\n    <div id='OuterContainer' >\n        <h1 className='NavBarItem' id=\"NavBarContainer200\">\n            <Link to='/' id='NavBarLogo200'>200 OK</Link>\n        </h1>\n        <div id='GitLinkContainer' className='NavBarItem' >\n            <Link id='GitLink' to='https://github.com/zeisen33/Stack-Overflow'>Site GitHub Repo</Link>\n        </div>\n        <div id='SearchContainer' className='NavBarItem'>\n            <input id='NavSearchBar' type='text' placeholder='Search...' value={searchStr} onChange={handleSearchChange} />\n        </div>\n        <div id='loginoutsignupContainer'>{loginout()}</div>\n    </div>\n\n\n\n\n    )\n}\n\nexport default NavBar","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/Footer/Footer.js",[],[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/components/Splash/Splash.js",["115","116","117"],[],"import NavBar from \"../Navigation/NavBar\"\nimport \"./Splash.css\"\nimport SearchIcon from '../../assets/SearchIcon.png'\nimport { Link, Redirect } from \"react-router-dom\"\nimport Footer from \"../Footer/Footer.js\"\n\nconst Splash = () => {\n    return (\n    <div id='wholeWindow'>\n        <div id='ContentContainerSplash'>\n            <div id='BlackBackground'>\n                <div id='BubbleContainer'>\n                    <div className='SplashBubble' id='leftBubble'>\n                        <img className='leftBubbleItem' id='SearchIcon' src={SearchIcon}></img>\n                        <span className='leftBubbleItem' id='Item2'>Find the best answer to your technical question, help others answer theirs</span>\n                        <Link className='leftBubbleItem' id='JoinButton' to='/signup'><span id='JoinSpan'>Join the community</span></Link>\n                    <div className='leftBubbleItem' id='orDiv'>or <Link to='/questions' id='searchLink'>search content</Link></div>\n                    </div>\n                    <div className='SplashBubble' id='rightBubble'>\n                        <span id='questionIcon' className='rightBubbleItem'>?</span>\n                        <span id='have?' className='rightBubbleItem'>Have a coding question?</span>\n                        <Link className='rightBubbleItem' to='/' id='QuestionButton'><span id='questionLink'>Ask a Question</span></Link>\n\n                    </div>\n                </div>\n                <div id='TextContainer'>\n                    <h1 id='bigText'>Everything is going to be</h1>\n                    <h1 id='logo200ok'>200 OK</h1>\n                </div>\n                <div id='SubtitleContainer'>\n                    <div className='Subtitle'>\n                        <span className='largeWhite'>Search</span>\n                        <span className='smallGrey'>people's questions</span>\n                    </div>\n                    <div className='Subtitle'>\n                    <span className='largeWhite'>Ask</span>\n                        <span className='smallGrey'>a question</span>\n                    </div>\n                    <div className='Subtitle'>\n                    <span className='largeWhite'>Answer</span>\n                        <span className='smallGrey'>others' questions</span>\n                    </div>\n                    <div className='Subtitle'>\n                    <span className='largeWhite'>Vote</span>\n                        <span className='smallGrey'>for good answers</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <Footer />\n    </div>\n    )\n}\n\nexport default Splash","/Users/zane/Desktop/GitHub/FSP/frontend/src/store/questions.js",["118"],[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/components/QuestionsIndex/QuestionsIndex.js",["119"],[],"import { useState, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport * as questionActions from '../../store/questions.js'\nimport { Link } from \"react-router-dom\"\nimport * as userActions from '../../store/users'\n\nconst QuestionsIndex = () => {\n    const dispatch = useDispatch()\n    const questions = useSelector(questionActions.getQuestions)\n    const users = useSelector(userActions.getUsers)\n    // debugger\n    // const user = users[question.akerId]\n\n    // debugger\n    useEffect(() => {\n        dispatch(questionActions.fetchAllQuestions())\n    }, [dispatch])\n\n    // debugger\n\n    // const handleClick - go to show\n\n    const questionsList = questions.map((question) => {    \n        return (\n            <div key={question.id} >\n                <ul>\n                    <li>\n                        <h1>\n                            <Link to={`questions/${question.id}`}>{question.title}</Link>\n                        </h1>\n                    </li>\n                    <li>\n                        Asked by: {users[question.askerId].displayName}\n                    </li>\n                </ul>\n            </div>\n        )\n    })\n\n    // debugger\n\n    return (\n        <>\n            <h1>Questions</h1>\n            {questionsList}\n        </>\n    )\n}\n\nexport default QuestionsIndex","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/QuestionsShow/QuestionsShow.js",[],[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/components/QuestionsCreate/QuestionsCreate.js",["120","121","122","123"],[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/store/users.js",[],[],{"ruleId":"124","severity":1,"message":"125","line":8,"column":21,"nodeType":"126","messageId":"127","endLine":8,"endColumn":32},{"ruleId":"124","severity":1,"message":"128","line":9,"column":8,"nodeType":"126","messageId":"127","endLine":9,"endColumn":22},{"ruleId":"124","severity":1,"message":"129","line":6,"column":8,"nodeType":"126","messageId":"127","endLine":6,"endColumn":14},{"ruleId":"124","severity":1,"message":"130","line":78,"column":11,"nodeType":"126","messageId":"127","endLine":78,"endColumn":19},{"ruleId":"124","severity":1,"message":"131","line":11,"column":8,"nodeType":"126","messageId":"127","endLine":11,"endColumn":14},{"ruleId":"132","severity":1,"message":"133","line":75,"column":13,"nodeType":"134","endLine":75,"endColumn":55},{"ruleId":"132","severity":1,"message":"133","line":94,"column":13,"nodeType":"134","endLine":94,"endColumn":55},{"ruleId":"132","severity":1,"message":"133","line":109,"column":21,"nodeType":"134","endLine":109,"endColumn":63},{"ruleId":"132","severity":1,"message":"133","line":113,"column":21,"nodeType":"134","endLine":113,"endColumn":61},{"ruleId":"132","severity":1,"message":"133","line":117,"column":21,"nodeType":"134","endLine":117,"endColumn":64},{"ruleId":"124","severity":1,"message":"135","line":6,"column":8,"nodeType":"126","messageId":"127","endLine":6,"endColumn":17},{"ruleId":"124","severity":1,"message":"136","line":10,"column":10,"nodeType":"126","messageId":"127","endLine":10,"endColumn":19},{"ruleId":"124","severity":1,"message":"137","line":22,"column":10,"nodeType":"126","messageId":"127","endLine":22,"endColumn":21},{"ruleId":"124","severity":1,"message":"138","line":22,"column":23,"nodeType":"126","messageId":"127","endLine":22,"endColumn":37},{"ruleId":"124","severity":1,"message":"139","line":23,"column":10,"nodeType":"126","messageId":"127","endLine":23,"endColumn":24},{"ruleId":"124","severity":1,"message":"140","line":23,"column":26,"nodeType":"126","messageId":"127","endLine":23,"endColumn":43},{"ruleId":"124","severity":1,"message":"141","line":24,"column":10,"nodeType":"126","messageId":"127","endLine":24,"endColumn":15},{"ruleId":"124","severity":1,"message":"142","line":24,"column":17,"nodeType":"126","messageId":"127","endLine":24,"endColumn":25},{"ruleId":"132","severity":1,"message":"133","line":93,"column":17,"nodeType":"134","endLine":93,"endColumn":59},{"ruleId":"132","severity":1,"message":"133","line":97,"column":17,"nodeType":"134","endLine":97,"endColumn":57},{"ruleId":"132","severity":1,"message":"133","line":101,"column":17,"nodeType":"134","endLine":101,"endColumn":60},{"ruleId":"124","severity":1,"message":"143","line":4,"column":10,"nodeType":"126","messageId":"127","endLine":4,"endColumn":18},{"ruleId":"124","severity":1,"message":"135","line":7,"column":8,"nodeType":"126","messageId":"127","endLine":7,"endColumn":17},{"ruleId":"124","severity":1,"message":"144","line":8,"column":8,"nodeType":"126","messageId":"127","endLine":8,"endColumn":21},{"ruleId":"124","severity":1,"message":"145","line":10,"column":8,"nodeType":"126","messageId":"127","endLine":10,"endColumn":18},{"ruleId":"124","severity":1,"message":"146","line":11,"column":10,"nodeType":"126","messageId":"127","endLine":11,"endColumn":23},{"ruleId":"124","severity":1,"message":"147","line":11,"column":25,"nodeType":"126","messageId":"127","endLine":11,"endColumn":30},{"ruleId":"124","severity":1,"message":"148","line":12,"column":10,"nodeType":"126","messageId":"127","endLine":12,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":45,"column":29,"nodeType":"134","endLine":45,"endColumn":71},{"ruleId":"124","severity":1,"message":"131","line":1,"column":8,"nodeType":"126","messageId":"127","endLine":1,"endColumn":14},{"ruleId":"124","severity":1,"message":"143","line":4,"column":16,"nodeType":"126","messageId":"127","endLine":4,"endColumn":24},{"ruleId":"132","severity":1,"message":"133","line":14,"column":25,"nodeType":"134","endLine":14,"endColumn":90},{"ruleId":"124","severity":1,"message":"149","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":23},{"ruleId":"124","severity":1,"message":"150","line":1,"column":10,"nodeType":"126","messageId":"127","endLine":1,"endColumn":18},{"ruleId":"124","severity":1,"message":"151","line":5,"column":10,"nodeType":"126","messageId":"127","endLine":5,"endColumn":14},{"ruleId":"124","severity":1,"message":"152","line":12,"column":12,"nodeType":"126","messageId":"127","endLine":12,"endColumn":25},{"ruleId":"124","severity":1,"message":"153","line":12,"column":27,"nodeType":"126","messageId":"127","endLine":12,"endColumn":43},{"ruleId":"124","severity":1,"message":"154","line":50,"column":11,"nodeType":"126","messageId":"127","endLine":50,"endColumn":21},"no-unused-vars","'restoreCSRF' is defined but never used.","Identifier","unusedVar","'sessionReducer' is defined but never used.","'Footer' is defined but never used.","'response' is assigned a value but never used.","'NavBar' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ErrorLogo' is defined but never used.","'loginUser' is defined but never used.","'emailErrors' is assigned a value but never used.","'setEmailErrors' is assigned a value but never used.","'passwordErrors' is assigned a value but never used.","'setPasswordErrors' is assigned a value but never used.","'robot' is assigned a value but never used.","'setRobot' is assigned a value but never used.","'Redirect' is defined but never used.","'WellfoundLogo' is defined but never used.","'GitHubLogo' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'NavLink' is defined but never used.","'fetchAllUsers' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'loginRedirect' is assigned a value but never used.","'setloginRedirect' is assigned a value but never used.","'showErrors' is assigned a value but never used."]