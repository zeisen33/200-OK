[{"/Users/zane/Desktop/GitHub/FSP/frontend/src/index.js":"1","/Users/zane/Desktop/GitHub/FSP/frontend/src/App.js":"2","/Users/zane/Desktop/GitHub/FSP/frontend/src/store/index.js":"3","/Users/zane/Desktop/GitHub/FSP/frontend/src/store/csrf.js":"4","/Users/zane/Desktop/GitHub/FSP/frontend/src/store/session.js":"5","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/NavBar/NavBar.js":"6","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/LoginFormPage/LoginForm.js":"7","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/SignupFormPage/SignupForm.js":"8"},{"size":1105,"mtime":1675971384597,"results":"9","hashOfConfig":"10"},{"size":560,"mtime":1676296935317,"results":"11","hashOfConfig":"10"},{"size":707,"mtime":1675969757208,"results":"12","hashOfConfig":"10"},{"size":1466,"mtime":1676305526111,"results":"13","hashOfConfig":"10"},{"size":2664,"mtime":1676298320270,"results":"14","hashOfConfig":"10"},{"size":606,"mtime":1676296440016,"results":"15","hashOfConfig":"10"},{"size":5764,"mtime":1676260026065,"results":"16","hashOfConfig":"10"},{"size":4385,"mtime":1676317861763,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},"1x81nui",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/zane/Desktop/GitHub/FSP/frontend/src/index.js",["47","48"],[],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport configureStore from './store';\nimport csrfFetch, { restoreCSRF } from './store/csrf';\nimport sessionReducer from './store/session.js'\nimport * as sessionActions from './store/session'\n\nconst store = configureStore();\n\nif (process.env.NODE_ENV !== 'production') {\n  window.store = store;\n  window.csrfFetch = csrfFetch;\n  window.sessionActions = sessionActions;\n  // debugger\n}\n\nfunction Root() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nconst renderApplication = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Root />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );  \n}\n\nif (\n  sessionStorage.getItem(\"currentUser\") === null ||\n  sessionStorage.getItem(\"X-CSRF-Token\") === null \n) {\n  store.dispatch(sessionActions.restoreSession()).then(renderApplication);\n} else {\n  renderApplication();\n}",[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/App.js",[],[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/store/index.js",[],[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/store/csrf.js",[],[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/store/session.js",["49"],[],"import csrfFetch from \"./csrf\"\n\nconst SET_CURRENT_USER = 'session/setCurrentUser'\nconst REMOVE_CURRENT_USER = 'session/removeCurrentUser'\nconst RECEIVE_USER = 'users/RECEIVE_USER'\nconst REMOVE_USER = 'users/REMOVE_USER'\n\n// Action Creators\nexport const receiveUser = (user) => {\n    // debugger\n    return {\n        type: RECEIVE_USER,\n        user: user\n    }\n}\n\nexport const removeUser = (userId) => {\n    return {\n        type: REMOVE_USER,\n        userId: userId\n    }\n}\n\nconst setCurrentUser = (user) => {\n    return {\n      type: SET_CURRENT_USER,\n      payload: user\n    };\n  };\n  \n  const removeCurrentUser = () => {\n    return {\n      type: REMOVE_CURRENT_USER\n    };\n  };\n\n// Thunk Action\nexport const loginUser = (user) => async (dispatch) => {\n    const { email, password } = user;\n    const response = await csrfFetch('/api/session', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    dispatch(setCurrentUser(data.user));\n    return response;\n};\n\nconst initialState = { user: null }\n\nconst storeCSRFToken = (response) => {\n    const csrfToken = response.headers.get(\"X-CSRF-Token\")\n    if (csrfToken) sessionStorage.setItem(\"X-CSRF-Token\", csrfToken)\n}\n\nconst storeCurrentUser = (user) => {\n    if (user) sessionStorage.setItem(\"currentUser\", JSON.stringify(user))\n    else sessionStorage.removeItem(\"currentUser\")\n}\n\nexport const restoreSession = () => async (dispatch) => {\n    const response = await csrfFetch(\"/api/session\")\n    storeCSRFToken(response)\n    const data = await response.json()\n    storeCurrentUser(data.user)\n    dispatch(setCurrentUser(data.user))\n    return response\n}\n\nexport const logoutUser = (userId) => async (dispatch) => {\n    const response = await csrfFetch('/api/session', {\n        method: 'DELETE'\n    })\n\n    sessionStorage.setItem('currentUser', null)\n    dispatch(removeCurrentUser(userId))\n}\n\nexport const signup = (user) => async (dispatch) => {\n  const { displayName, email, password } = user;\n  const response = await csrfFetch(\"api/users\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      displayName,\n      email,\n      password\n    })\n  });\n  const data = await response.json();\n  storeCurrentUser(data.user);\n  dispatch(setCurrentUser(data.user));\n  return response;\n};\n\n// Reducer\nconst sessionReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case SET_CURRENT_USER:\n        return { ...state, user: action.payload };\n      case REMOVE_CURRENT_USER:\n        return { ...state, user: null };\n      default:\n        return state;\n    }\n  };\n  \n  \nexport default sessionReducer\n","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/NavBar/NavBar.js",["50","51","52","53","54","55","56","57","58","59","60","61"],[],"import { useDispatch, useSelector } from \"react-redux\"\nimport { useState } from 'react'\nimport * as sessionActions from '../../store/session'\nimport { Redirect } from 'react-router-dom'\nimport './NavBar.css'\nimport { Link } from 'react-router-dom'\nimport ErrorLogo from \"../../assets/Exclam.png\"\nimport WellfoundLogo from \"../../assets/Wellfound.png\"\nimport LinkedInLogo from \"../../assets/LinkedInLogo.png\"\nimport GitHubLogo from \"../../assets/GitHubLogo.png\"\nimport { BrowserRouter, Route } from \"react-router-dom\" \n\n\nconst NavBar = () => {\nreturn <h1>Hello From NavBar</h1>\n\n\n\n\n\n}\n\nexport default NavBar","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/LoginFormPage/LoginForm.js",["62","63","64","65","66"],[],"import { useDispatch, useSelector } from \"react-redux\"\nimport { useState } from 'react'\nimport * as sessionActions from '../../store/session'\nimport { Redirect } from 'react-router-dom'\nimport './LoginForm.css'\nimport { Link } from 'react-router-dom'\nimport ErrorLogo from \"../../assets/Exclam.png\"\nimport WellfoundLogo from \"../../assets/Wellfound.png\"\nimport LinkedInLogo from \"../../assets/LinkedInLogo.png\"\nimport GitHubLogo from \"../../assets/GitHubLogo.png\"\n\n\nconst LoginFormPage = () => {\n    const dispatch = useDispatch()\n    const sessionUser = useSelector((state) => state.session.user)\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [errors, setErrors] = useState([])\n\n    if (sessionUser) return <Redirect to='/' />\n\n    const handleEmail = (e) => {\n        e.preventDefault()\n        setEmail(e.currentTarget.value)\n    }\n\n    const handlePassword = (e) => {\n        e.preventDefault()\n        setPassword(e.currentTarget.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        setErrors([])\n        return dispatch(sessionActions.loginUser({ email, password }))\n            .catch(async (res) => {\n                let data;\n                try {\n                    // clone lets you read response body twice\n                    data = await res.clone().json();\n                } catch {\n                    data = await res.text() // hits if server is down\n                }\n                if (data?.errors) setErrors(data.errors);\n                else if (data) setErrors([data]);\n                else setErrors([res.statusText]);\n            });\n    }\n\n    const LoginInput = () => {\n        return (\n            <input className=\"LoginInput\" id=\"EmailInput\"\n            type=\"text\" value={email} onChange={handleEmail}\n            ></input>\n        )\n    }\n\n    const ErrorsLoginInput = () => {\n        return (\n            <div id='ErrorsPasswordContainer'>\n            <input name='password' id='ErrorsEmailInput' className='ErrorsLoginInput'\n            type=\"password\" value={password} onChange={handlePassword}\n            ></input>\n            <img className='ErrorImg' src={ErrorLogo}></img>\n            </div>\n        )\n    }\n\n    const PasswordInput = () => {\n        return (\n            <input name='password' id='PasswordInput' className='LoginInput'\n            type=\"password\" value={password} onChange={handlePassword}\n            ></input>\n        )\n    }\n\n    const ErrorsPasswordInput = () => {\n        return (\n            <div id='ErrorsPasswordContainer'>\n            <input name='password' id='ErrorsPasswordInput' className='ErrorsLoginInput'\n            type=\"password\" value={password} onChange={handlePassword}\n            ></input>\n            <img className='ErrorImg' src={ErrorLogo}></img>\n            </div>\n        )\n    }\n\n    return (\n        <div id='LoginWindow'>\n        <div className='ColumnContainer'>\n            <h1 id=\"Container200\">\n                <Link to='/' id='Logo200'>200 OK</Link>\n            </h1>\n            <div id='ButtonsContainer'>\n                <a href='https://www.linkedin.com/in/zane-eisen-121856bb/' className=\"Buttons\" id ='LinkedIn'>\n                    <img src={LinkedInLogo} className='logos'></img>\n                    My LinkedIn\n                </a>\n                <a href='https://github.com/zeisen33' className=\"Buttons\" id='GitHub'>\n                    <img src={GitHubLogo} className='logos'></img>\n                    My GitHub\n                </a>\n                <a href='https://angel.co/' className=\"Buttons\" id='Wellfound'>\n                    <img src={WellfoundLogo} className='logos'></img>\n                    My Wellfound\n                </a>\n            </div>\n            <div id='FormContainer' >\n                <form onSubmit={handleSubmit} className='LoginForm'>\n                    <div id='EmailContainer'>\n                    <label htmlFor='EmailInput' id='EmailLabel'>Email\n                    </label>\n                    \n                        {errors.length > 0 ? ErrorsLoginInput() : LoginInput()}\n                    \n                    </div>\n                    <ul className='Error'>\n                        {errors.length > 0 ? 'Invalid Credentials.' : null}\n                    </ul>\n                  \n                    <div id='Password Container'>\n                        <div id='PasswordForgotPassword'>\n                        <label id='LoginPasswordLabel' htmlFor='password'>Password\n                        </label>\n                        <Link to='/' id='ForgotPassword'>Forgot Password?</Link>\n                        </div>\n                    \n                            {errors.length > 0 ? ErrorsPasswordInput(): PasswordInput()}\n                        \n                    <ul className='Error' id='Error2'>\n                        {errors.length > 0 ? 'Invalid Credentials.' : null}\n                    </ul>\n                    </div>\n                    <br/>\n                    <button className='Buttons' type=\"submit\" id='LogInButton'>Log in</button>\n                </form>\n            </div>\n            <div id='TextContainer'>\n            <span id='NoAccount' >Don't have an account? <a href='users/new' id='NewUser'>Sign up</a></span>\n            <br/>\n            <p id=\"TextParagraph\">Are you a recruiter? Check out my links!\n                <a className='parLinks' href='https://www.linkedin.com/in/zane-eisen-121856bb/'>My LinkedIn</a>\n                <a className='parLinks' href='https://github.com/zeisen33'>My GitHub</a>\n                <a className='parLinks' href='https://angel.co/'>My Wellfound</a>\n            </p>\n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport default LoginFormPage\n","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/SignupFormPage/SignupForm.js",["67","68","69","70"],[],{"ruleId":"71","severity":1,"message":"72","line":8,"column":21,"nodeType":"73","messageId":"74","endLine":8,"endColumn":32},{"ruleId":"71","severity":1,"message":"75","line":9,"column":8,"nodeType":"73","messageId":"74","endLine":9,"endColumn":22},{"ruleId":"71","severity":1,"message":"76","line":74,"column":11,"nodeType":"73","messageId":"74","endLine":74,"endColumn":19},{"ruleId":"71","severity":1,"message":"77","line":1,"column":10,"nodeType":"73","messageId":"74","endLine":1,"endColumn":21},{"ruleId":"71","severity":1,"message":"78","line":1,"column":23,"nodeType":"73","messageId":"74","endLine":1,"endColumn":34},{"ruleId":"71","severity":1,"message":"79","line":2,"column":10,"nodeType":"73","messageId":"74","endLine":2,"endColumn":18},{"ruleId":"71","severity":1,"message":"80","line":3,"column":13,"nodeType":"73","messageId":"74","endLine":3,"endColumn":27},{"ruleId":"71","severity":1,"message":"81","line":4,"column":10,"nodeType":"73","messageId":"74","endLine":4,"endColumn":18},{"ruleId":"71","severity":1,"message":"82","line":6,"column":10,"nodeType":"73","messageId":"74","endLine":6,"endColumn":14},{"ruleId":"71","severity":1,"message":"83","line":7,"column":8,"nodeType":"73","messageId":"74","endLine":7,"endColumn":17},{"ruleId":"71","severity":1,"message":"84","line":8,"column":8,"nodeType":"73","messageId":"74","endLine":8,"endColumn":21},{"ruleId":"71","severity":1,"message":"85","line":9,"column":8,"nodeType":"73","messageId":"74","endLine":9,"endColumn":20},{"ruleId":"71","severity":1,"message":"86","line":10,"column":8,"nodeType":"73","messageId":"74","endLine":10,"endColumn":18},{"ruleId":"71","severity":1,"message":"87","line":11,"column":10,"nodeType":"73","messageId":"74","endLine":11,"endColumn":23},{"ruleId":"71","severity":1,"message":"88","line":11,"column":25,"nodeType":"73","messageId":"74","endLine":11,"endColumn":30},{"ruleId":"89","severity":1,"message":"90","line":64,"column":13,"nodeType":"91","endLine":64,"endColumn":55},{"ruleId":"89","severity":1,"message":"90","line":83,"column":13,"nodeType":"91","endLine":83,"endColumn":55},{"ruleId":"89","severity":1,"message":"90","line":96,"column":21,"nodeType":"91","endLine":96,"endColumn":63},{"ruleId":"89","severity":1,"message":"90","line":100,"column":21,"nodeType":"91","endLine":100,"endColumn":61},{"ruleId":"89","severity":1,"message":"90","line":104,"column":21,"nodeType":"91","endLine":104,"endColumn":64},{"ruleId":"71","severity":1,"message":"83","line":6,"column":8,"nodeType":"73","messageId":"74","endLine":6,"endColumn":17},{"ruleId":"89","severity":1,"message":"90","line":55,"column":17,"nodeType":"91","endLine":55,"endColumn":59},{"ruleId":"89","severity":1,"message":"90","line":59,"column":17,"nodeType":"91","endLine":59,"endColumn":57},{"ruleId":"89","severity":1,"message":"90","line":63,"column":17,"nodeType":"91","endLine":63,"endColumn":60},"no-unused-vars","'restoreCSRF' is defined but never used.","Identifier","unusedVar","'sessionReducer' is defined but never used.","'response' is assigned a value but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'useState' is defined but never used.","'sessionActions' is defined but never used.","'Redirect' is defined but never used.","'Link' is defined but never used.","'ErrorLogo' is defined but never used.","'WellfoundLogo' is defined but never used.","'LinkedInLogo' is defined but never used.","'GitHubLogo' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]