[{"/Users/zane/Desktop/GitHub/FSP/frontend/src/index.js":"1","/Users/zane/Desktop/GitHub/FSP/frontend/src/App.js":"2","/Users/zane/Desktop/GitHub/FSP/frontend/src/store/index.js":"3","/Users/zane/Desktop/GitHub/FSP/frontend/src/store/csrf.js":"4","/Users/zane/Desktop/GitHub/FSP/frontend/src/store/session.js":"5","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/LoginFormPage/LoginForm.js":"6","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/SignupFormPage/SignupForm.js":"7","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/Navigation/NavBar.js":"8","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/Footer/Footer.js":"9","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/Splash/Splash.js":"10","/Users/zane/Desktop/GitHub/FSP/frontend/src/store/questions.js":"11","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/QuestionsIndex/QuestionsIndex.js":"12","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/QuestionsShow/QuestionsShow.js":"13","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/QuestionsCreate/QuestionsCreate.js":"14","/Users/zane/Desktop/GitHub/FSP/frontend/src/store/users.js":"15","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/QuestionsUpdate/QuestionsUpdate.js":"16"},{"size":1202,"mtime":1676577794585,"results":"17","hashOfConfig":"18"},{"size":1326,"mtime":1680556344816,"results":"19","hashOfConfig":"18"},{"size":846,"mtime":1680295202294,"results":"20","hashOfConfig":"18"},{"size":1468,"mtime":1680713739775,"results":"21","hashOfConfig":"18"},{"size":2816,"mtime":1676579249783,"results":"22","hashOfConfig":"18"},{"size":6102,"mtime":1680721184136,"results":"23","hashOfConfig":"18"},{"size":6943,"mtime":1680721312564,"results":"24","hashOfConfig":"18"},{"size":2851,"mtime":1680721208328,"results":"25","hashOfConfig":"18"},{"size":1382,"mtime":1676693911961,"results":"26","hashOfConfig":"18"},{"size":2590,"mtime":1680721324249,"results":"27","hashOfConfig":"18"},{"size":3745,"mtime":1680720833642,"results":"28","hashOfConfig":"18"},{"size":1294,"mtime":1680721236724,"results":"29","hashOfConfig":"18"},{"size":2178,"mtime":1680721244500,"results":"30","hashOfConfig":"18"},{"size":2788,"mtime":1680721219709,"results":"31","hashOfConfig":"18"},{"size":1973,"mtime":1680706566019,"results":"32","hashOfConfig":"18"},{"size":4333,"mtime":1680721263938,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},"1x81nui",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/zane/Desktop/GitHub/FSP/frontend/src/index.js",["85","86"],[],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport configureStore from './store';\nimport csrfFetch, { restoreCSRF } from './store/csrf';\nimport sessionReducer from './store/session.js'\nimport * as sessionActions from './store/session'\nimport * as questionActions from './store/questions'\nconst store = configureStore();\n\nif (process.env.NODE_ENV !== 'production') {\n  window.store = store;\n  window.csrfFetch = csrfFetch;\n  window.sessionActions = sessionActions;\n  window.questionActions = questionActions;\n  // debugger\n}\n\nfunction Root() {\n\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nconst renderApplication = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Root />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );  \n}\n\nif (\n  sessionStorage.getItem(\"currentUser\") === null ||\n  sessionStorage.getItem(\"X-CSRF-Token\") === null \n) {\n  store.dispatch(sessionActions.restoreSession()).then(renderApplication);\n} else {\n  renderApplication();\n}",[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/App.js",["87"],[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/store/index.js",[],[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/store/csrf.js",[],[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/store/session.js",["88"],[],"import csrfFetch from \"./csrf\"\n\nconst SET_CURRENT_USER = 'session/setCurrentUser'\nconst REMOVE_CURRENT_USER = 'session/removeCurrentUser'\nconst RECEIVE_USER = 'users/RECEIVE_USER'\nconst REMOVE_USER = 'users/REMOVE_USER'\n\n// Action Creators\nexport const receiveUser = (user) => {\n    // debugger\n    return {\n        type: RECEIVE_USER,\n        user: user\n    }\n}\n\nexport const removeUser = (userId) => {\n    return {\n        type: REMOVE_USER,\n        userId: userId\n    }\n}\n\nconst setCurrentUser = (user) => {\n  // debugger\n    return {\n      type: SET_CURRENT_USER,\n      payload: user\n    };\n  };\n  \n  const removeCurrentUser = () => {\n    return {\n      type: REMOVE_CURRENT_USER\n    };\n  };\n\n// Thunk Action\nexport const loginUser = (user) => async (dispatch) => {\n    // debugger\n    const { email, password } = user;\n    const response = await csrfFetch('/api/session', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    storeCurrentUser(data.user);\n    dispatch(setCurrentUser(data.user));\n    return response;\n};\n\nconst initialState = { user: JSON.parse(sessionStorage.getItem('currentUser')) }\n\nconst storeCSRFToken = (response) => {\n    const csrfToken = response.headers.get(\"X-CSRF-Token\")\n    if (csrfToken) sessionStorage.setItem(\"X-CSRF-Token\", csrfToken)\n}\n\nconst storeCurrentUser = (user) => {\n  // debugger\n    if (user) sessionStorage.setItem(\"currentUser\", JSON.stringify(user))\n    else sessionStorage.removeItem(\"currentUser\")\n}\n\nexport const restoreSession = () => async (dispatch) => {\n    const response = await csrfFetch(\"/api/session\")\n    storeCSRFToken(response)\n    const data = await response.json()\n    storeCurrentUser(data.user)\n    dispatch(setCurrentUser(data.user))\n    return response\n}\n\nexport const logoutUser = (userId) => async (dispatch) => {\n    const response = await csrfFetch('/api/session', {\n        method: 'DELETE'\n    })\n\n    // sessionStorage.setItem('currentUser', null)\n    storeCurrentUser(null)\n    dispatch(removeCurrentUser(userId))\n}\n\nexport const signup = (user) => async (dispatch) => {\n  const { displayName, email, password } = user;\n  const response = await csrfFetch(\"api/users\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      displayName,\n      email,\n      password\n    })\n  });\n  const data = await response.json();\n  storeCurrentUser(data.user);\n  dispatch(setCurrentUser(data.user));\n  return response;\n};\n\n// Reducer\nconst sessionReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case SET_CURRENT_USER:\n        return { ...state, user: action.payload };\n      case REMOVE_CURRENT_USER:\n        return { ...state, user: null };\n      default:\n        return state;\n    }\n  };\n  \n  \nexport default sessionReducer\n","/Users/zane/Desktop/GitHub/FSP/frontend/src/components/LoginFormPage/LoginForm.js",["89","90","91","92","93"],[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/components/SignupFormPage/SignupForm.js",["94","95","96"],[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/components/Navigation/NavBar.js",["97","98","99","100","101","102","103","104"],[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/components/Footer/Footer.js",[],[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/components/Splash/Splash.js",["105"],[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/store/questions.js",["106","107"],[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/components/QuestionsIndex/QuestionsIndex.js",[],[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/components/QuestionsShow/QuestionsShow.js",["108"],[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/components/QuestionsCreate/QuestionsCreate.js",["109","110"],[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/store/users.js",[],[],"/Users/zane/Desktop/GitHub/FSP/frontend/src/components/QuestionsUpdate/QuestionsUpdate.js",["111","112","113"],[],{"ruleId":"114","severity":1,"message":"115","line":8,"column":21,"nodeType":"116","messageId":"117","endLine":8,"endColumn":32},{"ruleId":"114","severity":1,"message":"118","line":9,"column":8,"nodeType":"116","messageId":"117","endLine":9,"endColumn":22},{"ruleId":"114","severity":1,"message":"119","line":6,"column":8,"nodeType":"116","messageId":"117","endLine":6,"endColumn":14},{"ruleId":"114","severity":1,"message":"120","line":78,"column":11,"nodeType":"116","messageId":"117","endLine":78,"endColumn":19},{"ruleId":"121","severity":1,"message":"122","line":73,"column":13,"nodeType":"123","endLine":73,"endColumn":55},{"ruleId":"121","severity":1,"message":"122","line":92,"column":13,"nodeType":"123","endLine":92,"endColumn":55},{"ruleId":"121","severity":1,"message":"122","line":107,"column":21,"nodeType":"123","endLine":107,"endColumn":63},{"ruleId":"121","severity":1,"message":"122","line":111,"column":21,"nodeType":"123","endLine":111,"endColumn":61},{"ruleId":"121","severity":1,"message":"122","line":115,"column":21,"nodeType":"123","endLine":115,"endColumn":64},{"ruleId":"121","severity":1,"message":"122","line":88,"column":17,"nodeType":"123","endLine":88,"endColumn":59},{"ruleId":"121","severity":1,"message":"122","line":92,"column":17,"nodeType":"123","endLine":92,"endColumn":57},{"ruleId":"121","severity":1,"message":"122","line":96,"column":17,"nodeType":"123","endLine":96,"endColumn":60},{"ruleId":"114","severity":1,"message":"124","line":4,"column":10,"nodeType":"116","messageId":"117","endLine":4,"endColumn":18},{"ruleId":"114","severity":1,"message":"125","line":4,"column":26,"nodeType":"116","messageId":"117","endLine":4,"endColumn":39},{"ruleId":"114","severity":1,"message":"126","line":4,"column":41,"nodeType":"116","messageId":"117","endLine":4,"endColumn":46},{"ruleId":"114","severity":1,"message":"127","line":6,"column":8,"nodeType":"116","messageId":"117","endLine":6,"endColumn":17},{"ruleId":"114","severity":1,"message":"128","line":7,"column":8,"nodeType":"116","messageId":"117","endLine":7,"endColumn":21},{"ruleId":"114","severity":1,"message":"129","line":9,"column":8,"nodeType":"116","messageId":"117","endLine":9,"endColumn":18},{"ruleId":"114","severity":1,"message":"130","line":10,"column":10,"nodeType":"116","messageId":"117","endLine":10,"endColumn":17},{"ruleId":"121","severity":1,"message":"122","line":43,"column":29,"nodeType":"123","endLine":43,"endColumn":71},{"ruleId":"121","severity":1,"message":"122","line":13,"column":25,"nodeType":"123","endLine":13,"endColumn":90},{"ruleId":"114","severity":1,"message":"131","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":23},{"ruleId":"114","severity":1,"message":"120","line":111,"column":11,"nodeType":"116","messageId":"117","endLine":111,"endColumn":19},{"ruleId":"132","severity":1,"message":"133","line":25,"column":8,"nodeType":"134","endLine":25,"endColumn":20,"suggestions":"135"},{"ruleId":"114","severity":1,"message":"136","line":5,"column":20,"nodeType":"116","messageId":"117","endLine":5,"endColumn":24},{"ruleId":"114","severity":1,"message":"137","line":43,"column":15,"nodeType":"116","messageId":"117","endLine":43,"endColumn":34},{"ruleId":"132","severity":1,"message":"133","line":25,"column":8,"nodeType":"134","endLine":25,"endColumn":20,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":30,"column":22,"nodeType":"141","messageId":"142","endLine":30,"endColumn":24},{"ruleId":"114","severity":1,"message":"137","line":53,"column":15,"nodeType":"116","messageId":"117","endLine":53,"endColumn":34},"no-unused-vars","'restoreCSRF' is defined but never used.","Identifier","unusedVar","'sessionReducer' is defined but never used.","'Footer' is defined but never used.","'response' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Redirect' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'ErrorLogo' is defined but never used.","'WellfoundLogo' is defined but never used.","'GitHubLogo' is defined but never used.","'NavLink' is defined but never used.","'fetchAllUsers' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["143"],"'Link' is defined but never used.","'createFetchResponse' is assigned a value but never used.",["144"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"desc":"145","fix":"146"},{"desc":"145","fix":"147"},"Update the dependencies array to be: [dispatch, questionId]",{"range":"148","text":"149"},{"range":"150","text":"149"},[860,872],"[dispatch, questionId]",[996,1008]]