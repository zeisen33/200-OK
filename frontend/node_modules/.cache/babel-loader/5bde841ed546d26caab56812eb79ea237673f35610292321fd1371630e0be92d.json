{"ast":null,"code":"import\"./QuestionsShow.css\";import{useParams}from\"react-router-dom\";import{useSelector}from\"react-redux\";import*as questionActions from'../../store/questions.js';import{useEffect}from\"react\";import{useDispatch}from\"react-redux\";import*as userActions from'../../store/users';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var QuestionsShow=function QuestionsShow(){var dispatch=useDispatch();var _useParams=useParams(),questionId=_useParams.questionId;var question=useSelector(questionActions.getQuestion(questionId));var users=useSelector(userActions.getUsers);// const question = questionActions.fetchQuestion(questionId)\n// debugger\nuseEffect(function(){if(questionId){dispatch(questionActions.fetchQuestion(questionId));}},[dispatch,questionId]);// debugger\nif(question){return/*#__PURE__*/_jsxs(\"div\",{className:\"ShowQuestionContainer\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Hello From QusetionShow \",question.title]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"asked by \",users[question.askerId].displayName]}),/*#__PURE__*/_jsx(\"p\",{children:question.body})]});}else{return/*#__PURE__*/_jsx(\"h1\",{children:\"No Question\"});}};export default QuestionsShow;","map":{"version":3,"names":["useParams","useSelector","questionActions","useEffect","useDispatch","userActions","QuestionsShow","dispatch","questionId","question","getQuestion","users","getUsers","fetchQuestion","title","askerId","displayName","body"],"sources":["/Users/zane/Desktop/GitHub/FSP/frontend/src/components/QuestionsShow/QuestionsShow.js"],"sourcesContent":["import \"./QuestionsShow.css\"\nimport { useParams } from \"react-router-dom\"\nimport { useSelector } from \"react-redux\"\nimport * as questionActions from '../../store/questions.js'\nimport { useEffect } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport * as userActions from '../../store/users'\n\nconst QuestionsShow = () => {\n    const dispatch = useDispatch()\n    const { questionId } = useParams() \n    const question = useSelector(questionActions.getQuestion(questionId))\n    const users = useSelector(userActions.getUsers)\n    // const question = questionActions.fetchQuestion(questionId)\n    // debugger\n    useEffect(() => {\n        if (questionId) {\n            dispatch(questionActions.fetchQuestion(questionId))\n        }\n    }, [dispatch, questionId])    \n    // debugger\n    if (question) {\n        return (\n            <div className=\"ShowQuestionContainer\">\n                <h1>Hello From QusetionShow {question.title}</h1>\n                <h3>asked by {users[question.askerId].displayName}</h3>\n                <p>{question.body}</p>\n            </div>\n        )\n    } else {\n        return <h1>No Question</h1>\n    }\n\n\n}\n\nexport default QuestionsShow"],"mappings":"AAAA,MAAO,qBAAqB,CAC5B,OAASA,SAAS,KAAQ,kBAAkB,CAC5C,OAASC,WAAW,KAAQ,aAAa,CACzC,MAAO,GAAKC,gBAAe,KAAM,0BAA0B,CAC3D,OAASC,SAAS,KAAQ,OAAO,CACjC,OAASC,WAAW,KAAQ,aAAa,CACzC,MAAO,GAAKC,YAAW,KAAM,mBAAmB,yFAEhD,GAAMC,cAAa,CAAG,QAAhBA,cAAa,EAAS,CACxB,GAAMC,SAAQ,CAAGH,WAAW,EAAE,CAC9B,eAAuBJ,SAAS,EAAE,CAA1BQ,UAAU,YAAVA,UAAU,CAClB,GAAMC,SAAQ,CAAGR,WAAW,CAACC,eAAe,CAACQ,WAAW,CAACF,UAAU,CAAC,CAAC,CACrE,GAAMG,MAAK,CAAGV,WAAW,CAACI,WAAW,CAACO,QAAQ,CAAC,CAC/C;AACA;AACAT,SAAS,CAAC,UAAM,CACZ,GAAIK,UAAU,CAAE,CACZD,QAAQ,CAACL,eAAe,CAACW,aAAa,CAACL,UAAU,CAAC,CAAC,CACvD,CACJ,CAAC,CAAE,CAACD,QAAQ,CAAEC,UAAU,CAAC,CAAC,CAC1B;AACA,GAAIC,QAAQ,CAAE,CACV,mBACI,aAAK,SAAS,CAAC,uBAAuB,wBAClC,sBAAI,0BAAwB,CAACA,QAAQ,CAACK,KAAK,GAAM,cACjD,sBAAI,WAAS,CAACH,KAAK,CAACF,QAAQ,CAACM,OAAO,CAAC,CAACC,WAAW,GAAM,cACvD,mBAAIP,QAAQ,CAACQ,IAAI,EAAK,GACpB,CAEd,CAAC,IAAM,CACH,mBAAO,oBAAI,aAAW,EAAK,CAC/B,CAGJ,CAAC,CAED,cAAeX,cAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}