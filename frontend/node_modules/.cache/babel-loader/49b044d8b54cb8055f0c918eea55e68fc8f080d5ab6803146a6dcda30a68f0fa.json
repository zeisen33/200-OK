{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { default as thunk } from 'redux-thunk';\nimport csrfFetch from './csrf';\nimport sessionReducer from './session';\nimport * as sessionActions from './store/session';\nconst store = configureStore();\nconst rootReducer = combineReducers({\n  session: sessionReducer\n});\nlet enhancer;\nif (process.env.NODE_ENV !== 'production') {\n  window.store = store;\n  window.csrfFetch = csrfFetch;\n  window.sessionActions = sessionActions;\n}\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\nconst configureStore = function () {\n  let preloadedState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return createStore(rootReducer, preloadedState, enhancer);\n};\nexport default configureStore;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","compose","default","thunk","csrfFetch","sessionReducer","sessionActions","store","configureStore","rootReducer","session","enhancer","process","env","NODE_ENV","window","logger","require","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","preloadedState"],"sources":["/Users/zane/Desktop/GitHub/FSP/frontend/src/store/index.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport { default as thunk } from 'redux-thunk'\nimport csrfFetch from './csrf'\nimport sessionReducer from './session'\nimport * as sessionActions from './store/session'\n\n\nconst store = configureStore()\n\nconst rootReducer = combineReducers({\n    session: sessionReducer\n})\n\nlet enhancer;\n\nif (process.env.NODE_ENV !== 'production') {\n  window.store = store;\n  window.csrfFetch = csrfFetch;\n  window.sessionActions = sessionActions\n}\n\n\nif (process.env.NODE_ENV === 'production') {\n    enhancer = applyMiddleware(thunk);\n  } else {\n    const logger = require('redux-logger').default;\n    const composeEnhancers =\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n  }\n\n  const configureStore = (preloadedState={}) => {\n    return createStore(rootReducer, preloadedState, enhancer)\n  }\n\n  export default configureStore"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAC9E,SAASC,OAAO,IAAIC,KAAK,QAAQ,aAAa;AAC9C,OAAOC,SAAS,MAAM,QAAQ;AAC9B,OAAOC,cAAc,MAAM,WAAW;AACtC,OAAO,KAAKC,cAAc,MAAM,iBAAiB;AAGjD,MAAMC,KAAK,GAAGC,cAAc,EAAE;AAE9B,MAAMC,WAAW,GAAGV,eAAe,CAAC;EAChCW,OAAO,EAAEL;AACb,CAAC,CAAC;AAEF,IAAIM,QAAQ;AAEZ,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCC,MAAM,CAACR,KAAK,GAAGA,KAAK;EACpBQ,MAAM,CAACX,SAAS,GAAGA,SAAS;EAC5BW,MAAM,CAACT,cAAc,GAAGA,cAAc;AACxC;AAGA,IAAIM,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACvCH,QAAQ,GAAGX,eAAe,CAACG,KAAK,CAAC;AACnC,CAAC,MAAM;EACL,MAAMa,MAAM,GAAGC,OAAO,CAAC,cAAc,CAAC,CAACf,OAAO;EAC9C,MAAMgB,gBAAgB,GACpBH,MAAM,CAACI,oCAAoC,IAAIlB,OAAO;EACxDU,QAAQ,GAAGO,gBAAgB,CAAClB,eAAe,CAACG,KAAK,EAAEa,MAAM,CAAC,CAAC;AAC7D;AAEA,MAAMR,cAAc,GAAG,YAAuB;EAAA,IAAtBY,cAAc,uEAAC,CAAC,CAAC;EACvC,OAAOtB,WAAW,CAACW,WAAW,EAAEW,cAAc,EAAET,QAAQ,CAAC;AAC3D,CAAC;AAED,eAAeH,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}