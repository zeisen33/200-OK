{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { default as thunk } from 'redux-thunk';\nimport sessionReducer from './session';\nimport questionsReducer from './questions.js';\nimport usersReducer from './users';\nconst rootReducer = combineReducers({\n  session: sessionReducer,\n  questions: questionsReducer,\n  users: usersReducer\n});\nlet enhancer;\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\nconst configureStore = function () {\n  let preloadedState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return createStore(rootReducer, preloadedState, enhancer);\n};\nexport default configureStore;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","compose","default","thunk","sessionReducer","questionsReducer","usersReducer","rootReducer","session","questions","users","enhancer","process","env","NODE_ENV","logger","require","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState"],"sources":["/Users/zane/Desktop/GitHub/FSP/frontend/src/store/index.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport { default as thunk } from 'redux-thunk'\nimport sessionReducer from './session'\nimport questionsReducer from './questions.js'\nimport usersReducer from './users'\n\nconst rootReducer = combineReducers({\n    session: sessionReducer,\n    questions: questionsReducer,\n    users: usersReducer\n})\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n    enhancer = applyMiddleware(thunk);\n  } else {\n    const logger = require('redux-logger').default;\n    const composeEnhancers =\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n  }\n\n  const configureStore = (preloadedState={}) => {\n    return createStore(rootReducer, preloadedState, enhancer)\n  }\n\n  export default configureStore"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAC9E,SAASC,OAAO,IAAIC,KAAK,QAAQ,aAAa;AAC9C,OAAOC,cAAc,MAAM,WAAW;AACtC,OAAOC,gBAAgB,MAAM,gBAAgB;AAC7C,OAAOC,YAAY,MAAM,SAAS;AAElC,MAAMC,WAAW,GAAGR,eAAe,CAAC;EAChCS,OAAO,EAAEJ,cAAc;EACvBK,SAAS,EAAEJ,gBAAgB;EAC3BK,KAAK,EAAEJ;AACX,CAAC,CAAC;AAEF,IAAIK,QAAQ;AAEZ,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACvCH,QAAQ,GAAGX,eAAe,CAACG,KAAK,CAAC;AACnC,CAAC,MAAM;EACL,MAAMY,MAAM,GAAGC,OAAO,CAAC,cAAc,CAAC,CAACd,OAAO;EAC9C,MAAMe,gBAAgB,GACpBC,MAAM,CAACC,oCAAoC,IAAIlB,OAAO;EACxDU,QAAQ,GAAGM,gBAAgB,CAACjB,eAAe,CAACG,KAAK,EAAEY,MAAM,CAAC,CAAC;AAC7D;AAEA,MAAMK,cAAc,GAAG,YAAuB;EAAA,IAAtBC,cAAc,uEAAC,CAAC,CAAC;EACvC,OAAOvB,WAAW,CAACS,WAAW,EAAEc,cAAc,EAAEV,QAAQ,CAAC;AAC3D,CAAC;AAED,eAAeS,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}