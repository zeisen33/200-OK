{"ast":null,"code":"const RECEIVE_USER = 'users/RECEIVE_USER';\nconst REMOVE_USER = 'users/REMOVE_USER';\n\n// Action Creators\nexport const receiveUser = user => {\n  return {\n    type: RECEIVE_USER,\n    user: user\n  };\n};\nexport const removeUser = userId => {\n  return {\n    type: REMOVE_USER,\n    userId: userId\n  };\n};\n\n// Thunk Action\nexport const loginUser = user => async dispatch => {\n  const response = await csrfFetch('/api/session', {\n    method: 'POST',\n    body: JSON.stringify(user)\n  });\n  const res = await response.json();\n  sessionStorage.setItem('currentUser', JSON.stringify(res.user));\n  dispatch(receiveUser(res.user));\n};\n\n// Reducer\nconst sessionReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState = {\n    ...state\n  };\n  switch (action.type) {\n    case RECEIVE_SESSION:\n      action.user[id] = action.user;\n      return newState;\n    case REMOVE_SESSION:\n      delete newState[action.userId];\n      return newState;\n    default:\n      return state;\n  }\n};\nexport default sessionReducer;","map":{"version":3,"names":["RECEIVE_USER","REMOVE_USER","receiveUser","user","type","removeUser","userId","loginUser","dispatch","response","csrfFetch","method","body","JSON","stringify","res","json","sessionStorage","setItem","sessionReducer","state","action","newState","RECEIVE_SESSION","id","REMOVE_SESSION"],"sources":["/Users/zane/Desktop/GitHub/FSP/frontend/src/store/session.js"],"sourcesContent":["const RECEIVE_USER = 'users/RECEIVE_USER'\nconst REMOVE_USER = 'users/REMOVE_USER'\n\n// Action Creators\nexport const receiveUser = (user) => {\n    return {\n        type: RECEIVE_USER,\n        user: user\n    }\n}\n\nexport const removeUser = (userId) => {\n    return {\n        type: REMOVE_USER,\n        userId: userId\n    }\n}\n\n// Thunk Action\nexport const loginUser = (user) => async (dispatch) => {\n    const response = await csrfFetch('/api/session', {\n        method: 'POST',\n        body: JSON.stringify(user)\n    })\n\n    const res = await response.json()\n    sessionStorage.setItem('currentUser', JSON.stringify(res.user))\n    dispatch(receiveUser(res.user))\n}\n\n// Reducer\nconst sessionReducer = (state={}, action) => {\n    let newState = { ...state }\n\n    switch (action.type) {\n        case RECEIVE_SESSION:\n            action.user[id] = action.user\n            return newState\n        case REMOVE_SESSION:\n            delete newState[action.userId]\n            return newState\n        default:\n            return state\n    }\n}\n\nexport default sessionReducer\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,oBAAoB;AACzC,MAAMC,WAAW,GAAG,mBAAmB;;AAEvC;AACA,OAAO,MAAMC,WAAW,GAAIC,IAAI,IAAK;EACjC,OAAO;IACHC,IAAI,EAAEJ,YAAY;IAClBG,IAAI,EAAEA;EACV,CAAC;AACL,CAAC;AAED,OAAO,MAAME,UAAU,GAAIC,MAAM,IAAK;EAClC,OAAO;IACHF,IAAI,EAAEH,WAAW;IACjBK,MAAM,EAAEA;EACZ,CAAC;AACL,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAIJ,IAAI,IAAK,MAAOK,QAAQ,IAAK;EACnD,MAAMC,QAAQ,GAAG,MAAMC,SAAS,CAAC,cAAc,EAAE;IAC7CC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,IAAI;EAC7B,CAAC,CAAC;EAEF,MAAMY,GAAG,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;EACjCC,cAAc,CAACC,OAAO,CAAC,aAAa,EAAEL,IAAI,CAACC,SAAS,CAACC,GAAG,CAACZ,IAAI,CAAC,CAAC;EAC/DK,QAAQ,CAACN,WAAW,CAACa,GAAG,CAACZ,IAAI,CAAC,CAAC;AACnC,CAAC;;AAED;AACA,MAAMgB,cAAc,GAAG,YAAsB;EAAA,IAArBC,KAAK,uEAAC,CAAC,CAAC;EAAA,IAAEC,MAAM;EACpC,IAAIC,QAAQ,GAAG;IAAE,GAAGF;EAAM,CAAC;EAE3B,QAAQC,MAAM,CAACjB,IAAI;IACf,KAAKmB,eAAe;MAChBF,MAAM,CAAClB,IAAI,CAACqB,EAAE,CAAC,GAAGH,MAAM,CAAClB,IAAI;MAC7B,OAAOmB,QAAQ;IACnB,KAAKG,cAAc;MACf,OAAOH,QAAQ,CAACD,MAAM,CAACf,MAAM,CAAC;MAC9B,OAAOgB,QAAQ;IACnB;MACI,OAAOF,KAAK;EAAA;AAExB,CAAC;AAED,eAAeD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}