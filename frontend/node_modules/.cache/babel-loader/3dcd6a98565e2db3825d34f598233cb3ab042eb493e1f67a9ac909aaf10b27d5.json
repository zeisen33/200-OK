{"ast":null,"code":"import _objectSpread from\"/Users/zane/Desktop/GitHub/FSP/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/Users/zane/Desktop/GitHub/FSP/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/zane/Desktop/GitHub/FSP/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import csrfFetch from\"./csrf\";import{fetchAllUsers}from\"./users\";import{receiveUser,receiveUsers}from\"./users\";var RECEIVE_QUESTIONS='/api/RECEIVE_QUESTIONS';var RECEIVE_QUESTION='/api/RECEIVE_QUESTION';export var receiveQuestion=function receiveQuestion(question){// debugger\nreturn{type:RECEIVE_QUESTION,question:question};};export var receiveQuestions=function receiveQuestions(questions){return{type:RECEIVE_QUESTIONS,questions:questions};};export var getQuestion=function getQuestion(questionId){return function(state){return state!==null&&state!==void 0&&state.questions?state.questions[questionId]:null;};};export var getQuestions=function getQuestions(state){return state!==null&&state!==void 0&&state.questions?Object.values(state.questions):[];};export var fetchAllQuestions=function fetchAllQuestions(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){var response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return csrfFetch('/api/questions',{method:'GET'// debugger\n});case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;// debugger\ndispatch(receiveUsers(data.askers));dispatch(receiveQuestions(data.questions));// dispatch(receiveUsers)\ncase 8:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var fetchQuestion=function fetchQuestion(questionId){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch){var response,data;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return csrfFetch(\"/api/questions/\".concat(questionId));case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:data=_context2.sent;// debugger\n// data.question maybe\ndispatch(receiveQuestion(data.question));dispatch(receiveUser(data.asker));case 8:case\"end\":return _context2.stop();}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var createQuestion=function createQuestion(question){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dispatch){var response,data;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.next=2;return csrfFetch(\"/api/questions\",{method:'POST',body:JSON.stringify(question)});case 2:response=_context3.sent;if(!response.ok){_context3.next=8;break;}_context3.next=6;return response.json();case 6:data=_context3.sent;dispatch(receiveQuestion(data.question));// remove double dispatch and use payload in action instead\ncase 8:case\"end\":return _context3.stop();}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};var questionsReducer=function questionsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var action=arguments.length>1?arguments[1]:undefined;// debugger\nObject.freeze(state);var nextState=_objectSpread({},state);switch(action.type){case RECEIVE_QUESTIONS:nextState=_objectSpread(_objectSpread({},state),action.questions);return nextState;case RECEIVE_QUESTION:// debugger\n// nextState[action.payload.question.id] = action.payload.question\nnextState[action.question.id]=action.question;return nextState;default:return state;}};export default questionsReducer;","map":{"version":3,"names":["csrfFetch","fetchAllUsers","receiveUser","receiveUsers","RECEIVE_QUESTIONS","RECEIVE_QUESTION","receiveQuestion","question","type","receiveQuestions","questions","getQuestion","questionId","state","getQuestions","Object","values","fetchAllQuestions","dispatch","method","response","json","data","askers","fetchQuestion","asker","createQuestion","body","JSON","stringify","ok","questionsReducer","action","freeze","nextState","id"],"sources":["/Users/zane/Desktop/GitHub/FSP/frontend/src/store/questions.js"],"sourcesContent":["import csrfFetch from \"./csrf\"\nimport { fetchAllUsers } from \"./users\"\nimport { receiveUser, receiveUsers } from \"./users\"\n\nconst RECEIVE_QUESTIONS = '/api/RECEIVE_QUESTIONS'\nconst RECEIVE_QUESTION = '/api/RECEIVE_QUESTION'\n\nexport const receiveQuestion = (question) => {\n    // debugger\n    return {\n        type: RECEIVE_QUESTION,\n        question: question\n    }\n}\n\nexport const receiveQuestions = (questions) => {\n    return {\n        type: RECEIVE_QUESTIONS,\n        questions: questions\n    }\n}\n\nexport const getQuestion = (questionId) => (state) => {\n    return state?.questions ? state.questions[questionId] : null;\n}\n\nexport const getQuestions = (state) => {\n    return state?.questions ? Object.values(state.questions) : []\n}\n\nexport const fetchAllQuestions = () => async (dispatch) => {\n    // debugger\n    const response = await csrfFetch('/api/questions', {\n        method: 'GET'\n        // debugger\n        })\n    \n    const data = await response.json()\n    // debugger\n    dispatch(receiveUsers(data.askers))\n    dispatch(receiveQuestions(data.questions))\n    // dispatch(receiveUsers)\n}\n\nexport const fetchQuestion = (questionId) => async (dispatch) => {\n    const response = await csrfFetch(`/api/questions/${questionId}`)\n\n    const data = await response.json()\n    // debugger\n    // data.question maybe\n    dispatch(receiveQuestion(data.question))\n    dispatch(receiveUser(data.asker))\n}\n\nexport const createQuestion = (question) => async (dispatch) => {\n    // debugger\n    const response = await csrfFetch(`/api/questions`, {\n        method: 'POST',\n        body: JSON.stringify(question)\n    })\n\n    // debugger\n    if (response.ok) {\n        const data = await response.json();\n        dispatch(receiveQuestion(data.question))\n        // remove double dispatch and use payload in action instead\n    }\n    \n}\n\n\nconst questionsReducer = (state={}, action) => {\n    // debugger\n    Object.freeze(state);\n    let nextState = { ...state };\n\n    switch (action.type) {\n        case RECEIVE_QUESTIONS:\n            nextState = { ...state, ...action.questions} \n            return nextState\n        case RECEIVE_QUESTION:\n            // debugger\n            // nextState[action.payload.question.id] = action.payload.question\n            nextState[action.question.id] = action.question\n            return nextState\n        default:\n            return state\n    }\n\n}\n\nexport default questionsReducer"],"mappings":"sYAAA,MAAOA,UAAS,KAAM,QAAQ,CAC9B,OAASC,aAAa,KAAQ,SAAS,CACvC,OAASC,WAAW,CAAEC,YAAY,KAAQ,SAAS,CAEnD,GAAMC,kBAAiB,CAAG,wBAAwB,CAClD,GAAMC,iBAAgB,CAAG,uBAAuB,CAEhD,MAAO,IAAMC,gBAAe,CAAG,QAAlBA,gBAAe,CAAIC,QAAQ,CAAK,CACzC;AACA,MAAO,CACHC,IAAI,CAAEH,gBAAgB,CACtBE,QAAQ,CAAEA,QACd,CAAC,CACL,CAAC,CAED,MAAO,IAAME,iBAAgB,CAAG,QAAnBA,iBAAgB,CAAIC,SAAS,CAAK,CAC3C,MAAO,CACHF,IAAI,CAAEJ,iBAAiB,CACvBM,SAAS,CAAEA,SACf,CAAC,CACL,CAAC,CAED,MAAO,IAAMC,YAAW,CAAG,QAAdA,YAAW,CAAIC,UAAU,QAAK,UAACC,KAAK,CAAK,CAClD,MAAOA,MAAK,SAALA,KAAK,WAALA,KAAK,CAAEH,SAAS,CAAGG,KAAK,CAACH,SAAS,CAACE,UAAU,CAAC,CAAG,IAAI,CAChE,CAAC,GAED,MAAO,IAAME,aAAY,CAAG,QAAfA,aAAY,CAAID,KAAK,CAAK,CACnC,MAAOA,MAAK,SAALA,KAAK,WAALA,KAAK,CAAEH,SAAS,CAAGK,MAAM,CAACC,MAAM,CAACH,KAAK,CAACH,SAAS,CAAC,CAAG,EAAE,CACjE,CAAC,CAED,MAAO,IAAMO,kBAAiB,CAAG,QAApBA,kBAAiB,oGAAS,iBAAOC,QAAQ,2JAE3BlB,UAAS,CAAC,gBAAgB,CAAE,CAC/CmB,MAAM,CAAE,KACR;AACA,CAAC,CAAC,QAHAC,QAAQ,qCAKKA,SAAQ,CAACC,IAAI,EAAE,QAA5BC,IAAI,eACV;AACAJ,QAAQ,CAACf,YAAY,CAACmB,IAAI,CAACC,MAAM,CAAC,CAAC,CACnCL,QAAQ,CAACT,gBAAgB,CAACa,IAAI,CAACZ,SAAS,CAAC,CAAC,CAC1C;AAAA,qDACH,iEAED,MAAO,IAAMc,cAAa,CAAG,QAAhBA,cAAa,CAAIZ,UAAU,oGAAK,kBAAOM,QAAQ,gKACjClB,UAAS,0BAAmBY,UAAU,EAAG,QAA1DQ,QAAQ,uCAEKA,SAAQ,CAACC,IAAI,EAAE,QAA5BC,IAAI,gBACV;AACA;AACAJ,QAAQ,CAACZ,eAAe,CAACgB,IAAI,CAACf,QAAQ,CAAC,CAAC,CACxCW,QAAQ,CAAChB,WAAW,CAACoB,IAAI,CAACG,KAAK,CAAC,CAAC,wDACpC,mEAED,MAAO,IAAMC,eAAc,CAAG,QAAjBA,eAAc,CAAInB,QAAQ,oGAAK,kBAAOW,QAAQ,gKAEhClB,UAAS,kBAAmB,CAC/CmB,MAAM,CAAE,MAAM,CACdQ,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACtB,QAAQ,CACjC,CAAC,CAAC,QAHIa,QAAQ,oBAMVA,QAAQ,CAACU,EAAE,iDACQV,SAAQ,CAACC,IAAI,EAAE,QAA5BC,IAAI,gBACVJ,QAAQ,CAACZ,eAAe,CAACgB,IAAI,CAACf,QAAQ,CAAC,CAAC,CACxC;AAAA,uDAGP,mEAGD,GAAMwB,iBAAgB,CAAG,QAAnBA,iBAAgB,EAAyB,IAArBlB,MAAK,2DAAC,CAAC,CAAC,IAAEmB,OAAM,2CACtC;AACAjB,MAAM,CAACkB,MAAM,CAACpB,KAAK,CAAC,CACpB,GAAIqB,UAAS,kBAAQrB,KAAK,CAAE,CAE5B,OAAQmB,MAAM,CAACxB,IAAI,EACf,IAAKJ,kBAAiB,CAClB8B,SAAS,gCAAQrB,KAAK,EAAKmB,MAAM,CAACtB,SAAS,CAAC,CAC5C,MAAOwB,UAAS,CACpB,IAAK7B,iBAAgB,CACjB;AACA;AACA6B,SAAS,CAACF,MAAM,CAACzB,QAAQ,CAAC4B,EAAE,CAAC,CAAGH,MAAM,CAACzB,QAAQ,CAC/C,MAAO2B,UAAS,CACpB,QACI,MAAOrB,MAAK,EAGxB,CAAC,CAED,cAAekB,iBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}