{"ast":null,"code":"var _jsxFileName = \"/Users/zane/Desktop/GitHub/FSP/frontend/src/components/QuestionsShow/QuestionsShow.js\",\n  _s = $RefreshSig$();\nimport \"./QuestionsShow.css\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport * as questionActions from '../../store/questions.js';\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as userActions from '../../store/users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionsShow = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    questionId\n  } = useParams();\n  const question = useSelector(questionActions.getQuestion(questionId));\n  const users = useSelector(userActions.getUsers);\n  // const question = questionActions.fetchQuestion(questionId)\n  // debugger\n  useEffect(() => {\n    if (questionId) {\n      dispatch(questionActions.fetchQuestion(questionId));\n    }\n  }, [dispatch, questionId]);\n  // debugger\n  if (question) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ShowQuestionContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello From QusetionShow \", question.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"asked by \", users[question.askerId].displayName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n};\n_s(QuestionsShow, \"qvhchuwfVAYAjol3UY6xj7isoTo=\", false, function () {\n  return [useDispatch, useParams, useSelector, useSelector];\n});\n_c = QuestionsShow;\nexport default QuestionsShow;\nvar _c;\n$RefreshReg$(_c, \"QuestionsShow\");","map":{"version":3,"names":["useParams","useSelector","questionActions","useEffect","useDispatch","userActions","QuestionsShow","dispatch","questionId","question","getQuestion","users","getUsers","fetchQuestion","title","askerId","displayName","body"],"sources":["/Users/zane/Desktop/GitHub/FSP/frontend/src/components/QuestionsShow/QuestionsShow.js"],"sourcesContent":["import \"./QuestionsShow.css\"\nimport { useParams } from \"react-router-dom\"\nimport { useSelector } from \"react-redux\"\nimport * as questionActions from '../../store/questions.js'\nimport { useEffect } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport * as userActions from '../../store/users'\n\nconst QuestionsShow = () => {\n    const dispatch = useDispatch()\n    const { questionId } = useParams() \n    const question = useSelector(questionActions.getQuestion(questionId))\n    const users = useSelector(userActions.getUsers)\n    // const question = questionActions.fetchQuestion(questionId)\n    // debugger\n    useEffect(() => {\n        if (questionId) {\n            dispatch(questionActions.fetchQuestion(questionId))\n        }\n    }, [dispatch, questionId])    \n    // debugger\n    if (question) {\n        return (\n            <div className=\"ShowQuestionContainer\">\n                <h1>Hello From QusetionShow {question.title}</h1>\n                <h3>asked by {users[question.askerId].displayName}</h3>\n                <p>{question.body}</p>\n            </div>\n        )\n    } else {\n        return <h1>No Question</h1>\n    }\n\n\n}\n\nexport default QuestionsShow"],"mappings":";;AAAA,OAAO,qBAAqB;AAC5B,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAO,KAAKC,eAAe,MAAM,0BAA0B;AAC3D,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAAA;AAEhD,MAAMC,aAAa,GAAG,MAAM;EAAA;EACxB,MAAMC,QAAQ,GAAGH,WAAW,EAAE;EAC9B,MAAM;IAAEI;EAAW,CAAC,GAAGR,SAAS,EAAE;EAClC,MAAMS,QAAQ,GAAGR,WAAW,CAACC,eAAe,CAACQ,WAAW,CAACF,UAAU,CAAC,CAAC;EACrE,MAAMG,KAAK,GAAGV,WAAW,CAACI,WAAW,CAACO,QAAQ,CAAC;EAC/C;EACA;EACAT,SAAS,CAAC,MAAM;IACZ,IAAIK,UAAU,EAAE;MACZD,QAAQ,CAACL,eAAe,CAACW,aAAa,CAACL,UAAU,CAAC,CAAC;IACvD;EACJ,CAAC,EAAE,CAACD,QAAQ,EAAEC,UAAU,CAAC,CAAC;EAC1B;EACA,IAAIC,QAAQ,EAAE;IACV,oBACI;MAAK,SAAS,EAAC,uBAAuB;MAAA,wBAClC;QAAA,WAAI,0BAAwB,EAACA,QAAQ,CAACK,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eACjD;QAAA,WAAI,WAAS,EAACH,KAAK,CAACF,QAAQ,CAACM,OAAO,CAAC,CAACC,WAAW;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eACvD;QAAA,UAAIP,QAAQ,CAACQ;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACpB;EAEd,CAAC,MAAM;IACH,oBAAO;MAAA,UAAI;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK;EAC/B;AAGJ,CAAC;AAAA,GA1BKX,aAAa;EAAA,QACEF,WAAW,EACLJ,SAAS,EACfC,WAAW,EACdA,WAAW;AAAA;AAAA,KAJvBK,aAAa;AA4BnB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}