{"ast":null,"code":"var _jsxFileName = \"/Users/zane/Desktop/GitHub/FSP/frontend/src/components/LoginFormPage/index.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from 'react';\nimport * as sessionActions from '../../store/session';\nimport { Redirect } from 'react-router-dom';\nimport './LoginForm.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginFormPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n  if (sessionUser) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 29\n  }, this);\n  const handleEmail = e => {\n    e.preventDefault();\n    setEmail(e.currentTarget.value);\n  };\n  const handlePassword = e => {\n    e.preventDefault();\n    setPassword(e.currentTarget.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.loginUser({\n      email,\n      password\n    })).catch(async res => {\n      var _data;\n      let data;\n      try {\n        // clone lets you read response body twice\n        data = await res.clone().json();\n      } catch {\n        data = await res.text(); // hits if server is down\n      }\n\n      if ((_data = data) !== null && _data !== void 0 && _data.errors) setErrors(data.errors);else if (data) setErrors([data]);else setErrors([res.statusText]);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: errors.map(error => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: error\n          }, error, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 46\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"LoginEmailLabel\",\n          children: [\"Email\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: email,\n            onChange: handleEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"LoginPasswordLabel\",\n          children: [\"Password\", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            id: \"ForgotPassword\",\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: handlePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"LogInButton\",\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(LoginFormPage, \"gop3dpAblinrLAYpTQ3v3S1rKm4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = LoginFormPage;\nexport default LoginFormPage;\n{/* <div className='DisplayBoxes'>\n            <div className='LoginBox'>\n                <form onSubmit={handleSubmit}>\n                    <ul>\n                        {errors.map(error => <li key={error}>{error}</li>)}\n                    </ul>\n                    <label id='LoginEmailLabel'>Email\n                        <br />\n                        <input\n                            type=\"text\" value={email} onChange={handleEmail}\n                        ></input>\n                    </label>\n                    <br>\n                    </br>\n                    <label id='LoginPasswordLabel'>Password\n                    <Link to='/' id='ForgotPassword'>Forgot Password?</Link>\n                        <br/> \n                        <input\n                            type=\"password\" value={password} onChange={handlePassword}\n                        ></input>\n                    </label>\n                    <br/>\n                    <button type=\"submit\" id='LogInButton'>Log in</button>\n                </form>\n            </div>\n        </div>\n        <div>Don't have an account?</div><Link to='/' id='SignUp'>Sign up</Link> */}\nvar _c;\n$RefreshReg$(_c, \"LoginFormPage\");","map":{"version":3,"names":["useDispatch","useSelector","useState","sessionActions","Redirect","Link","LoginFormPage","dispatch","sessionUser","state","session","user","email","setEmail","password","setPassword","errors","setErrors","handleEmail","e","preventDefault","currentTarget","value","handlePassword","handleSubmit","loginUser","catch","res","data","clone","json","text","statusText","map","error"],"sources":["/Users/zane/Desktop/GitHub/FSP/frontend/src/components/LoginFormPage/index.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\"\nimport { useState } from 'react'\nimport * as sessionActions from '../../store/session'\nimport { Redirect } from 'react-router-dom'\nimport './LoginForm.css'\nimport { Link } from 'react-router-dom'\n\n\nconst LoginFormPage = () => {\n    const dispatch = useDispatch()\n    const sessionUser = useSelector((state) => state.session.user)\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [errors, setErrors] = useState([])\n\n    if (sessionUser) return <Redirect to='/' />\n\n    const handleEmail = (e) => {\n        e.preventDefault()\n        setEmail(e.currentTarget.value)\n    }\n\n    const handlePassword = (e) => {\n        e.preventDefault()\n        setPassword(e.currentTarget.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        setErrors([])\n        return dispatch(sessionActions.loginUser({ email, password }))\n            .catch(async (res) => {\n                let data;\n                try {\n                    // clone lets you read response body twice\n                    data = await res.clone().json();\n                } catch {\n                    data = await res.text() // hits if server is down\n                }\n                if (data?.errors) setErrors(data.errors);\n                else if (data) setErrors([data]);\n                else setErrors([res.statusText]);\n            });\n    }\n\n    return (\n        <>\n            <div id='Form'>\n                <form onSubmit={handleSubmit}>\n                    <ul>\n                        {errors.map(error => <li key={error}>{error}</li>)}\n                    </ul>\n                    <label id='LoginEmailLabel'>Email\n                        <br />\n                        <input\n                            type=\"text\" value={email} onChange={handleEmail}\n                        ></input>\n                    </label>\n                    <br>\n                    </br>\n                    <label id='LoginPasswordLabel'>Password\n                    <Link to='/' id='ForgotPassword'>Forgot Password?</Link>\n                        <br/> \n                        <input\n                            type=\"password\" value={password} onChange={handlePassword}\n                        ></input>\n                    </label>\n                    <br/>\n                    <button type=\"submit\" id='LogInButton'>Log in</button>\n                </form>\n\n\n\n\n            </div>\n        </>\n    )\n}\n\nexport default LoginFormPage\n\n\n\n\n\n\n\n{/* <div className='DisplayBoxes'>\n            <div className='LoginBox'>\n                <form onSubmit={handleSubmit}>\n                    <ul>\n                        {errors.map(error => <li key={error}>{error}</li>)}\n                    </ul>\n                    <label id='LoginEmailLabel'>Email\n                        <br />\n                        <input\n                            type=\"text\" value={email} onChange={handleEmail}\n                        ></input>\n                    </label>\n                    <br>\n                    </br>\n                    <label id='LoginPasswordLabel'>Password\n                    <Link to='/' id='ForgotPassword'>Forgot Password?</Link>\n                        <br/> \n                        <input\n                            type=\"password\" value={password} onChange={handlePassword}\n                        ></input>\n                    </label>\n                    <br/>\n                    <button type=\"submit\" id='LogInButton'>Log in</button>\n                </form>\n            </div>\n        </div>\n        <div>Don't have an account?</div><Link to='/' id='SignUp'>Sign up</Link> */}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}