{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware,compose}from'redux';import{default as thunk}from'redux-thunk';import sessionReducer from'./session';import questionsReducer from'./questions.js';import usersReducer from'./users';var rootReducer=combineReducers({session:sessionReducer,questions:questionsReducer,users:usersReducer});var enhancer;if(process.env.NODE_ENV==='production'){enhancer=applyMiddleware(thunk);}else{var logger=require('redux-logger').default;var composeEnhancers=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||compose;enhancer=composeEnhancers(applyMiddleware(thunk,logger));}var configureStore=function configureStore(){var preloadedState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return createStore(rootReducer,preloadedState,enhancer);};export default configureStore;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","compose","default","thunk","sessionReducer","questionsReducer","usersReducer","rootReducer","session","questions","users","enhancer","process","env","NODE_ENV","logger","require","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState"],"sources":["/Users/zane/Desktop/GitHub/FSP/frontend/src/store/index.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport { default as thunk } from 'redux-thunk'\nimport sessionReducer from './session'\nimport questionsReducer from './questions.js'\nimport usersReducer from './users'\n\nconst rootReducer = combineReducers({\n    session: sessionReducer,\n    questions: questionsReducer,\n    users: usersReducer\n})\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n    enhancer = applyMiddleware(thunk);\n  } else {\n    const logger = require('redux-logger').default;\n    const composeEnhancers =\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n  }\n\n  const configureStore = (preloadedState={}) => {\n    return createStore(rootReducer, preloadedState, enhancer)\n  }\n\n  export default configureStore"],"mappings":"AAAA,OAASA,WAAW,CAAEC,eAAe,CAAEC,eAAe,CAAEC,OAAO,KAAQ,OAAO,CAC9E,OAASC,OAAO,GAAIC,MAAK,KAAQ,aAAa,CAC9C,MAAOC,eAAc,KAAM,WAAW,CACtC,MAAOC,iBAAgB,KAAM,gBAAgB,CAC7C,MAAOC,aAAY,KAAM,SAAS,CAElC,GAAMC,YAAW,CAAGR,eAAe,CAAC,CAChCS,OAAO,CAAEJ,cAAc,CACvBK,SAAS,CAAEJ,gBAAgB,CAC3BK,KAAK,CAAEJ,YACX,CAAC,CAAC,CAEF,GAAIK,SAAQ,CAEZ,GAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAE,CACvCH,QAAQ,CAAGX,eAAe,CAACG,KAAK,CAAC,CACnC,CAAC,IAAM,CACL,GAAMY,OAAM,CAAGC,OAAO,CAAC,cAAc,CAAC,CAACd,OAAO,CAC9C,GAAMe,iBAAgB,CACpBC,MAAM,CAACC,oCAAoC,EAAIlB,OAAO,CACxDU,QAAQ,CAAGM,gBAAgB,CAACjB,eAAe,CAACG,KAAK,CAAEY,MAAM,CAAC,CAAC,CAC7D,CAEA,GAAMK,eAAc,CAAG,QAAjBA,eAAc,EAA0B,IAAtBC,eAAc,2DAAC,CAAC,CAAC,CACvC,MAAOvB,YAAW,CAACS,WAAW,CAAEc,cAAc,CAAEV,QAAQ,CAAC,CAC3D,CAAC,CAED,cAAeS,eAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}