{"ast":null,"code":"var _jsxFileName = \"/Users/zane/Desktop/GitHub/FSP/frontend/src/components/LoginFormPage/index.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from 'react';\nimport * as sessionActions from '../../store/session';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginFormPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n  if (session.user) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 30\n  }, this);\n  const handleEmail = e => {\n    e.preventDefault();\n    setEmail(e.currentTarget.value);\n  };\n  const handlePassword = e => {\n    e.preventDefault();\n    setPassword(e.currentTarget.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setEttors([]);\n    return dispatch(sessionActions.loginUser({\n      email,\n      password\n    })).catch(async res => {\n      var _data;\n      let data;\n      try {\n        // clone lets you read response body twice\n        date = await res.clone().json();\n      } catch {\n        data = await res.text(); // hits if server is down\n      }\n\n      if ((_data = data) !== null && _data !== void 0 && _data.errors) setErrors(data.errors);else if (data) setErrors([data]);else setErrors([res.statusText]);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: errors.map(error => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: error\n        }, error, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 42\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"LoginEmailLabel\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: email,\n          onChange: handleEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"LoginPasswordLabel\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: handlePassword,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        value: \"Log In\",\n        id: \"LogInButton\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(LoginFormPage, \"gop3dpAblinrLAYpTQ3v3S1rKm4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = LoginFormPage;\nexport default LoginFormPage;\nvar _c;\n$RefreshReg$(_c, \"LoginFormPage\");","map":{"version":3,"names":["useDispatch","useSelector","useState","sessionActions","Redirect","LoginFormPage","dispatch","sessionUser","state","session","user","email","setEmail","password","setPassword","errors","setErrors","handleEmail","e","preventDefault","currentTarget","value","handlePassword","handleSubmit","setEttors","loginUser","catch","res","data","date","clone","json","text","statusText","map","error"],"sources":["/Users/zane/Desktop/GitHub/FSP/frontend/src/components/LoginFormPage/index.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\"\nimport { useState } from 'react'\nimport * as sessionActions from '../../store/session'\nimport { Redirect } from 'react-router-dom'\n\n\nconst LoginFormPage = () => {\n    const dispatch = useDispatch()\n    const sessionUser = useSelector((state) => state.session.user)\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [errors, setErrors] = useState([])\n\n    if (session.user) return <Redirect to='/' />\n\n    const handleEmail = (e) => {\n        e.preventDefault()\n        setEmail(e.currentTarget.value)\n    }\n\n    const handlePassword = (e) => {\n        e.preventDefault()\n        setPassword(e.currentTarget.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        setEttors([])\n        return dispatch(sessionActions.loginUser({ email, password }))\n            .catch(async (res) => {\n                let data;\n                try {\n                    // clone lets you read response body twice\n                    date = await res.clone().json();\n                } catch {\n                    data = await res.text() // hits if server is down\n                }\n                if (data?.errors) setErrors(data.errors);\n                else if (data) setErrors([data]);\n                else setErrors([res.statusText]);\n            });\n    }\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <ul>\n                    {errors.map(error => <li key={error}>{error}</li>)}\n                </ul>\n                <label id='LoginEmailLabel'>Email\n                    <input\n                        type=\"text\" value={email} onChange={handleEmail}\n                    ></input>\n                </label>\n                <label id='LoginPasswordLabel'>Password \n                    <input\n                        type=\"password\" value={password} onChange={handlePassword}\n                        required\n                    ></input>\n                </label>\n                <button type=\"submit\" value=\"Log In\" id='LogInButton'>Log In</button>\n            </form>\n        </>\n    )\n}\n\nexport default LoginFormPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}